
#include <gtest/gtest.h>
#include <vector>
#include <cmath>
#include <limits>
#include "SimpleLinearNDInterpolator.h"

// このファイルは scripts/generate_scipy_test.py により自動生成されています。


TEST(ScipyCompat, Fixed_D2_N20_Q40_S1001) {
  // 2 次元, 入力点 20 個, クエリ 40 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.6125949285699509, 0.18768957688192967, 0.076198634267814258, 0.63010099937306674, 0.15220440451029971, 0.13192838801799178, 0.7651532111809396, 0.49062098378949892, 0.36048545159445122, 0.06276670152685293, 0.26605703464693031, 0.78390767658066429, 0.88924009321763697, 0.32904133295635696, 0.37065006934857869, 0.38955366598158769, 0.38886987310444376, 0.35819465960477681, 0.086957373119100123, 0.40010579698106652 },
    /* dim 1 */ { 0.015700467820331521, 0.85789006454112493, 0.20109024444542412, 0.098562133520974315, 0.18024500741270899, 0.98411697959895572, 0.25346791474054742, 0.21108273486122675, 0.91312529478463922, 0.20118581961162829, 0.95633120734939492, 0.1085241545087855, 0.38003832848789409, 0.070951485206656284, 0.97778683895258656, 0.37760977059711276, 0.045338139901513697, 0.12433834170278402, 0.27107241401295001, 0.71806654189563224 }
  };
  std::vector<double> values = { 0.74264743816061973, 1.6626073177772001, -0.74452550207087309, -0.87492353101338161, -0.1406877389606945, 0.4921162579956519, -0.23537017889100362, -0.2329928411829563, 1.0203585485236448, -0.39509617818157139, 1.5867028265478129, 0.77905732953498541, 0.60843675061545111, -0.77466092711501688, 0.51459443042727449, 0.30077846461329444, 1.0300494046122595, -0.38908207485805274, 1.1903487622827287, -2.3898260878140896 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.55333198651576077, 0.69196390311203759 },
    /* q1 */ { 0.55963318539343032, 0.49190488032687973 },
    /* q2 */ { 0.3160936084858158, 0.82969396707379872 },
    /* q3 */ { 0.3770804393080322, 0.869659558544286 },
    /* q4 */ { 0.81276699365974692, 0.24734346591240899 },
    /* q5 */ { 0.68131565679338812, 0.33703867127518478 },
    /* q6 */ { 0.29998424336555474, 0.22739770657086858 },
    /* q7 */ { 0.20957181453699583, 0.27630906400759059 },
    /* q8 */ { 0.09388415422131495, 0.48545840440784471 },
    /* q9 */ { 0.13552511267300718, 0.70435981938434367 },
    /* q10 */ { 0.22491758232736545, 0.61567634014990247 },
    /* q11 */ { 0.29220561202725143, 0.45558290883523167 },
    /* q12 */ { 0.19522499984895059, 0.9327794171631586 },
    /* q13 */ { 0.27141068770777038, 0.90911552222505299 },
    /* q14 */ { 0.25621183067116693, 0.97274500863364588 },
    /* q15 */ { 0.33239751852998672, 0.94908111369554027 },
    /* q16 */ { 0.6125949285699509, 0.015700467820331521 },
    /* q17 */ { 0.18768957688192967, 0.85789006454112493 },
    /* q18 */ { 0.076198634267814258, 0.20109024444542412 },
    /* q19 */ { 0.63010099937306674, 0.098562133520974315 },
    /* q20 */ { 0.15220440451029971, 0.18024500741270899 },
    /* q21 */ { 0.13192838801799178, 0.98411697959895572 },
    /* q22 */ { 0.35895560303040036, 0.05814481255408499 },
    /* q23 */ { 0.27408751423819044, 0.88550767966288202 },
    /* q24 */ { 0.38537793316482261, 0.8479266904241094 },
    /* q25 */ { 0.097347544772422356, 0.59265139960529201 },
    /* q26 */ { 0.42440782169713787, 0.16771053828200538 },
    /* q27 */ { 0.70700433797686557, 0.10354314401487991 },
    /* q28 */ { 0.4099262369552571, 0.079637308473537866 },
    /* q29 */ { 0.54177510671216078, 0.16981594371405684 },
    /* q30 */ { 0.59460664102684302, 0.12719595986945673 },
    /* q31 */ { 0.24651117935776673, 0.93177871596196016 },
    /* q32 */ { 0.57053117858827695, 0.74739552824694933 },
    /* q33 */ { 0.38799149018670159, 0.82488214660679671 },
    /* q34 */ { 0.047181461927710444, 0.79538939127680663 },
    /* q35 */ { 0.67824658770557078, 0.87111805996691916 },
    /* q36 */ { -0.032587261995199499, 0.20474704273440233 },
    /* q37 */ { 0.79687888257710093, -0.11136986829517959 },
    /* q38 */ { 0.16379825958069022, -0.050282938706539881 },
    /* q39 */ { 0.05946737065250203, 0.074359981529160069 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { -0.42226496892378773, -0.49353695752844834, 0.097713259495583848, -0.2849577029543936, 0.38404130041981061, 0.22461501211258073, -0.076330449735150935, 0.45014649597844286, 0.42912294736560341, 1.1150241126851932, 0.15437666408194661, -0.29956628697268867, 1.2471421341068878, 1.4232228976162191, 0.86447117165690646, 1.040551935166244, 0.74264743816061973, 1.6626073177771996, -0.74452550207087287, -0.87492353101338161, -0.1406877389606945, 0.4921162579956519, 0.12769423874862124, 1.3414829331504219, -0.93761582869340754, 0.048510039907040253, -0.31103745802050453, -0.047933100739197432, 0.76867557874090586, -0.46842012643258091, -0.71156738394851127, 1.6056343861987088, 0.55076424895347276, -1.1953201616044298, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D2_N28_Q40_S1002) {
  // 2 次元, 入力点 28 個, クエリ 40 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.3808211594831159, 0.74761231706819109, 0.33713118679953669, 0.18721840166458081, 0.84034982458500052, 0.92885145299826211, 0.36595373947252063, 0.28307656046435514, 0.0028255507531961266, 0.14411522325918635, 0.25225644753311605, 0.33271179123569905, 0.074958211126748719, 0.023759081139567484, 0.13373561524660516, 0.71565227565958611, 0.24671079787453132, 0.6045613922813895, 0.30166136160577506, 0.41267355320606336, 0.56358777975588958, 0.86779492174394002, 0.46256303919424946, 0.14598555189498275, 0.2602550080407966, 0.14273570037339678, 0.4290485449384448, 0.62322368075308776 },
    /* dim 1 */ { 0.35718933767094696, 0.38949191910491154, 0.55489452952962404, 0.11965237903687864, 0.40270005746530324, 0.3479132017067148, 0.98975268880830569, 0.032070831785961929, 0.81711008755743886, 0.15440066569393596, 0.75737561474683834, 0.021838028412961341, 0.59444164166733704, 0.23601048063936914, 0.21151381579085782, 0.92684544735823227, 0.40486626681230564, 0.13437633317724185, 0.74745219269151164, 0.34735535203858292, 0.46729895740854976, 0.67644118878889958, 0.41133496087065746, 0.70922841918411794, 0.017962368295583064, 0.63647415047339062, 0.35106521791864242, 0.057955165224365723 }
  };
  std::vector<double> values = { -1.5714543754661177, 0.36372506345541805, -0.91726732574491898, -0.37176835843393258, 0.38548618684595642, -0.59686914338750652, -0.65783918564054833, -0.020393888025675006, 1.2847599735410689, -1.542826915713378, 0.58725026818610404, 0.44387343540990215, 0.30163346266528901, 0.13027485601813327, -1.4873075158169553, -0.22215583433730623, -0.69947495475915689, 0.14441128734817507, -0.1519663840283092, -1.1812850284870091, -1.2190119873230394, -1.0233248154706358, 1.1907228828349854, 1.2721603647255997, 1.175859430321502, 0.44704559833787844, 0.42439512588755446, 0.68243763232825005 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.033847614339837441, 0.54918740328804827 },
    /* q1 */ { 0.76034172078261408, 0.29059381799628942 },
    /* q2 */ { 0.71887884201091312, 0.18008156670277412 },
    /* q3 */ { 0.074589771258309193, 0.70692671613629798 },
    /* q4 */ { 0.46108912557929393, 0.88801677628601661 },
    /* q5 */ { 0.14270977081318348, 0.13612450487629604 },
    /* q6 */ { 0.10053663988178634, 0.20064165404138765 },
    /* q7 */ { 0.52016562142339218, 0.071389842271522966 },
    /* q8 */ { 0.44998224557438399, 0.16785657120959538 },
    /* q9 */ { 0.87899873310906751, 0.47568481598697249 },
    /* q10 */ { 0.83893786488381783, 0.3800350594256432 },
    /* q11 */ { 0.81858568779904373, 0.48954438845303816 },
    /* q12 */ { 0.12122648779837608, 0.64671473710828187 },
    /* q13 */ { 0.26050941625956953, 0.64627362423150869 },
    /* q14 */ { 0.2070119125862776, 0.85474613037086089 },
    /* q15 */ { 0.30662384953713723, 0.83152683208221856 },
    /* q16 */ { 0.3808211594831159, 0.35718933767094696 },
    /* q17 */ { 0.74761231706819109, 0.38949191910491154 },
    /* q18 */ { 0.33713118679953669, 0.55489452952962404 },
    /* q19 */ { 0.18721840166458081, 0.11965237903687864 },
    /* q20 */ { 0.84034982458500052, 0.40270005746530324 },
    /* q21 */ { 0.92885145299826211, 0.3479132017067148 },
    /* q22 */ { 0.31939627420265587, 0.65117336111056789 },
    /* q23 */ { 0.44580579206634713, 0.38120008939464994 },
    /* q24 */ { 0.13892541925289575, 0.18295724074239689 },
    /* q25 */ { 0.80770361940606561, 0.53296655394690551 },
    /* q26 */ { 0.1991209997140494, 0.73330201696547814 },
    /* q27 */ { 0.33380755053914785, 0.86860244074990867 },
    /* q28 */ { 0.13671215179792023, 0.1951356078066859 },
    /* q29 */ { 0.35338069589966076, 0.4813625010818971 },
    /* q30 */ { 0.037563635047696733, 0.79093236710553594 },
    /* q31 */ { 0.18158058661442841, 0.12933582721425596 },
    /* q32 */ { 0.26289898506243065, 0.019596895718906715 },
    /* q33 */ { 0.31860498047205321, 0.024746289712873654 },
    /* q34 */ { 0.80829300280392913, 0.011789475000640065 },
    /* q35 */ { 1.0566808741958886, 0.12017854934137021 },
    /* q36 */ { 0.23665145948637389, -0.1009469567411887 },
    /* q37 */ { 0.4843875115550077, -0.042110653724137512 },
    /* q38 */ { 0.60830999047665746, 0.9576524698980301 },
    /* q39 */ { -0.1225291829632365, 0.82204024879677817 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.5722227640748303, -0.029577597527970512, 0.076659925429639703, 0.95285126697731948, -0.34398713466872144, -0.078897543124580083, -0.96661985850406673, 0.42357411836210923, -0.19766676857631066, -0.41156925733739469, 0.050780702304622727, -0.091371188389754027, 0.67361314190958921, -0.20739603714511701, 0.40472368536220849, -0.074185100494250977, -1.5714543754661177, 0.36372506345541805, -0.91726732574491898, -0.37176835843393258, 0.38548618684595642, -0.59686914338750652, -0.53461685488661392, 0.80755900436126982, -1.5150672157651668, -0.32979987600760829, 0.92970531645585186, -0.40490278483442871, -1.5032286876857266, -1.1605775812723458, 1.2817026511771492, -0.48936139858291255, 1.0372682325334666, 0.31192418940717781, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D2_N35_Q48_S1003) {
  // 2 次元, 入力点 35 個, クエリ 48 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.18775736826863343, 0.49467932718885133, 0.75211286167607683, 0.34043719950408013, 0.97057711251207246, 0.21703473546567242, 0.70719749562726375, 0.38952571851141038, 0.53558345059737944, 0.82982035434034151, 0.97011350918015948, 0.084988390386141255, 0.47741166578345606, 0.50662772824713009, 0.89970833411173534, 0.35438725834588092, 0.37462238905562883, 0.93119657926476829, 0.5928230034323192, 0.70475488202835346, 0.30835589376056738, 0.32961420369537286, 0.18854162744245928, 0.4522716990926875, 0.75415873406747924, 0.93583508581614405, 0.22066675583139628, 0.96368651029133834, 0.98384172007441417, 0.97235889964760014, 0.40423100265815637, 0.50642714704505065, 0.15964504427817816, 0.58414267083189808, 0.1462076526922067 },
    /* dim 1 */ { 0.25670581021882211, 0.66079155748418528, 0.7230978681396768, 0.59754058849815617, 0.70670414046670893, 0.14070030939509937, 0.86289077117008439, 0.1147605781444323, 0.52802022731262332, 0.10937753124056437, 0.71136986690037896, 0.83750952375236387, 0.71643350608134149, 0.13504082128158024, 0.15905588473374177, 0.51881964593160568, 0.56566148375055703, 0.1459729046066609, 0.18488258818670378, 0.63726788283222313, 0.30706321668237446, 0.59172899038286142, 0.98080972186184379, 0.047711063140065013, 0.94886194285289194, 0.25541636824506286, 0.6596916293075733, 0.045492824556267797, 0.030869944705638974, 0.34978659044112248, 0.66142690547870331, 0.54456595538773367, 0.34024222315022057, 0.82508566576879983, 0.39564386205494007 }
  };
  std::vector<double> values = { 0.32216405463062464, -0.5085405254002372, -0.23273705382267793, 1.254842366512213, 1.7587146138612633, -0.52018690482678076, 0.37813942602551909, -0.48053402740243573, 1.7438912250033987, -1.2041585822120833, -1.6469016728929555, 0.75865868168436701, -0.0063276948413923508, -0.26972956706015844, 0.22692600841210103, 0.19785460016399734, -0.37105132288272391, -0.17223050480652152, -0.28700822766103912, -0.25151272125151514, 1.2515924256111008, -1.0538134356171271, 0.57910488295776474, -0.091305172337449059, 0.18347507453960119, -0.11013415250611756, -0.86362686301392522, -1.7624388187551412, -1.8234298067991745, 0.88147487271607938, 1.2182998753399901, -0.39698828014292736, -0.82378155698411792, -1.5397597371688871, 0.64873368578734358 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.73756574409111098, 0.50502490019532298 },
    /* q1 */ { 0.47892078259675536, 0.33998867739390048 },
    /* q2 */ { 0.15062093296991474, 0.63094833837162578 },
    /* q3 */ { 0.1647322578866656, 0.82600362497392699 },
    /* q4 */ { 0.62497168562178274, 0.11399039418911106 },
    /* q5 */ { 0.88256363139600869, 0.56458620458001818 },
    /* q6 */ { 0.97559257741136218, 0.36245355853782346 },
    /* q7 */ { 0.23771599916495775, 0.2348231120987653 },
    /* q8 */ { 0.517240810257379, 0.12254482420278301 },
    /* q9 */ { 0.4692688751466722, 0.2089955420502195 },
    /* q10 */ { 0.39944220090127591, 0.45130102997553445 },
    /* q11 */ { 0.26965026826621835, 0.40717557488964012 },
    /* q12 */ { 0.57833921993819482, 0.60869322254301061 },
    /* q13 */ { 0.78615948119626822, 0.183225495890777 },
    /* q14 */ { 0.68808051328194753, 0.32277306124812999 },
    /* q15 */ { 0.81459247868704121, 0.37774106199960289 },
    /* q16 */ { 0.18775736826863343, 0.25670581021882211 },
    /* q17 */ { 0.49467932718885133, 0.66079155748418528 },
    /* q18 */ { 0.75211286167607683, 0.7230978681396768 },
    /* q19 */ { 0.34043719950408013, 0.59754058849815617 },
    /* q20 */ { 0.97057711251207246, 0.70670414046670893 },
    /* q21 */ { 0.21703473546567242, 0.14070030939509937 },
    /* q22 */ { 0.70719749562726375, 0.86289077117008439 },
    /* q23 */ { 0.38952571851141038, 0.1147605781444323 },
    /* q24 */ { 0.29638631505030782, 0.82111831367027355 },
    /* q25 */ { 0.13676500891430027, 0.90915962280710383 },
    /* q26 */ { 0.59971710460860239, 0.64902972015820426 },
    /* q27 */ { 0.95751914966959117, 0.088421424656149938 },
    /* q28 */ { 0.35752979427985448, 0.58160103612435665 },
    /* q29 */ { 0.66812776625398751, 0.77409176695423831 },
    /* q30 */ { 0.34200073102062689, 0.55527431815723349 },
    /* q31 */ { 0.52100529882121505, 0.53629309135017844 },
    /* q32 */ { 0.83990177173797653, 0.10456639440889477 },
    /* q33 */ { 0.9437942657858569, 0.21818806794617759 },
    /* q34 */ { 0.80673886224312796, 0.41737065834050435 },
    /* q35 */ { 0.35300676362854477, 0.5124690057849568 },
    /* q36 */ { 0.18280023272069601, 0.37565354743040907 },
    /* q37 */ { 0.97185035012690801, 0.45165636229710171 },
    /* q38 */ { 0.49572671169209126, 0.73507822222399344 },
    /* q39 */ { 0.30649092042301068, 0.3074793124994889 },
    /* q40 */ { 0.98869648785024933, -0.056389802670818751 },
    /* q41 */ { 1.0723827029582049, 0.44208601305367279 },
    /* q42 */ { 0.063525578669423072, 0.52047009465178196 },
    /* q43 */ { 1.0045156433688611, 1.0949635634728316 },
    /* q44 */ { 0.16274898461776205, -0.019182690546366607 },
    /* q45 */ { 0.022626904638939169, 0.94537656509947343 },
    /* q46 */ { 0.85687017426284462, 0.86013096440013725 },
    /* q47 */ { 0.084653157776844512, 0.55799462965988933 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.79128445882265441, 0.90282514098448663, 0.1812551681525951, 0.15804556720940227, -0.52749066073685713, 0.79622558844194269, 0.27225322659273687, 0.35118985847164819, -0.21601432235288209, 0.23161821029663449, 1.0644460835928324, 0.69939357052081363, 0.32794599278388126, -0.53376698745974671, 0.44891628161208064, 0.83841064840445356, 0.32216405463062475, -0.50854052540023764, -0.23273705382267793, 1.2548423665122133, 1.7587146138612633, -0.52018690482678076, 0.37813942602551909, -0.48053402740243573, 0.89870237914887741, 0.66888178232106588, -0.38002662332587644, -0.99783015580284662, 0.44189552181475422, -0.88624839549578216, -0.42797941772656406, 0.67345147243024162, -1.2462024883021416, -0.39418715194121584, 1.2084928606424832, 0.22945652017205825, 0.78478299805570773, 1.1318526204257451, -0.26946471149605083, 1.2255652920396709, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D2_N50_Q60_S1004) {
  // 2 次元, 入力点 50 個, クエリ 60 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.00088045274071502089, 0.13847736529859134, 0.62067380485798762, 0.1254923400595731, 0.27424957494280588, 0.64175023755161231, 0.040505797944109245, 0.32468899969820975, 0.77957596947944363, 0.99676139607434655, 0.75390266455020916, 0.38976269633965976, 0.035865095441228845, 0.67776724172699365, 0.21342708690373324, 0.14464357336666567, 0.80512581835523145, 0.33645578693502576, 0.032390531825900126, 0.74305700733233437, 0.5290996779461925, 0.52630821210985324, 0.47620367474110237, 0.58614607723961765, 0.68798760810211079, 0.39766698126848443, 0.59247548896338731, 0.84404557413509385, 0.36398628622349605, 0.57108057050968719, 0.29131616186221843, 0.56343106425519218, 0.96124300987251332, 0.090156192128581836, 0.37748149647954454, 0.53717681884139745, 0.0077086417939997709, 0.53745888966011024, 0.94310216897742161, 0.26741329259949276, 0.20426963270313514, 0.95708933433313281, 0.14221877269286853, 0.53028326141127169, 0.37867671955395943, 0.87776981240378493, 0.028685545268751889, 0.12969670318386339, 0.44720559205019206, 0.54271078265694506 },
    /* dim 1 */ { 0.13015131212763142, 0.38065463694723745, 0.83709276791598508, 0.56047666743844216, 0.82498699483039661, 0.21470864622988861, 0.49154688173231653, 0.9652799312740642, 0.75684009205617653, 0.77046369468403719, 0.50265120738054103, 0.087492868439739357, 0.78717606999292256, 0.44238205714592282, 0.80027251852318892, 0.93591448955761669, 0.61115736440554835, 0.41263846810703186, 0.86599192242481204, 0.097196630266759176, 0.33097558329144794, 0.59850271599584559, 0.78466141202495432, 0.57368385070086814, 0.76405818272012804, 0.32128947891523185, 0.83737779832474635, 0.9726416027979522, 0.98472980391569787, 0.0066218827298361038, 0.44095618865375474, 0.78102595870494673, 0.66054775936874677, 0.47752000001507766, 0.55654063484323146, 0.34356075359966831, 0.71533216340117844, 0.93466374802823848, 0.85322446192286605, 0.21298684142216284, 0.52737788896183557, 0.46197953882538079, 0.56004583044952538, 0.21170970733158556, 0.056967864948034075, 0.9616653266330828, 0.90367624513929112, 0.98223859958673909, 0.88111042607739687, 0.44699721018621841 }
  };
  std::vector<double> values = { -1.7356452190961513, 0.72921253119011264, 0.42743207272547401, 2.1196759165231973, 1.1357931179557386, -1.1282379069961255, 0.82869779512294861, -1.1853320186546179, -0.99531726493385764, 1.0032512170246515, -2.6332510468816874, 0.11109613128619478, -0.84419959321261484, 0.43469339092104198, -1.1477228480801853, -0.95784600895768157, -2.5202741421914672, -2.2704337203011149, -0.12321546738473721, -0.46177013071024131, -1.1704038450816825, 0.34241347996157151, 0.14267645649890129, 0.15831795406386978, -0.0043905741470298383, 0.75759485456139297, -0.50451153838021146, -0.6660301011685521, -0.91844151976822985, -1.2699777124795222, 0.34358173636606476, -1.6487765288088305, 2.0823008897670872, 1.5005678578399992, 2.0723103156335103, 0.69200170915370474, -0.71550044311755556, -1.3498407758331172, -1.6871416109371205, 0.94795701580473823, -0.59063212854042335, 0.55656858548085508, -0.64539889348037249, 0.53782008205078558, -0.90503932436862844, -1.3962655083788851, -2.2635725105858464, -0.78174828763999726, -0.76430687291090615, -0.028876144685278226 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.10100860727309365, 0.94060977809454893 },
    /* q1 */ { 0.97169791342666423, 0.63099699762605488 },
    /* q2 */ { 0.58183025000623345, 0.96401171824729615 },
    /* q3 */ { 0.91252679180876772, 0.72928384870298679 },
    /* q4 */ { 0.83379711867277406, 0.89704900716240388 },
    /* q5 */ { 0.059954538661138534, 0.33411761026906178 },
    /* q6 */ { 0.24786071600256043, 0.90872713855402587 },
    /* q7 */ { 0.27279066303518973, 0.97741611159216701 },
    /* q8 */ { 0.19967642541624628, 0.96114434013947336 },
    /* q9 */ { 0.21077341173773492, 0.85372466763706745 },
    /* q10 */ { 0.26505940536213762, 0.62806368077608532 },
    /* q11 */ { 0.28838605277536122, 0.72726671606560567 },
    /* q12 */ { 0.48216683041544761, 0.53401352034176508 },
    /* q13 */ { 0.37597824872115093, 0.72206301389952754 },
    /* q14 */ { 0.52198098370204926, 0.72139669557524888 },
    /* q15 */ { 0.45999779444350003, 0.64656825428801046 },
    /* q16 */ { 0.78063219307235998, 0.25796160510734284 },
    /* q17 */ { 0.84864826590239628, 0.67618173861015718 },
    /* q18 */ { 0.90781938752029256, 0.57789488753322527 },
    /* q19 */ { 0.8387059390795244, 0.52526270353715665 },
    /* q20 */ { 0.00088045274071502089, 0.13015131212763142 },
    /* q21 */ { 0.13847736529859134, 0.38065463694723745 },
    /* q22 */ { 0.62067380485798762, 0.83709276791598508 },
    /* q23 */ { 0.1254923400595731, 0.56047666743844216 },
    /* q24 */ { 0.27424957494280588, 0.82498699483039661 },
    /* q25 */ { 0.64175023755161231, 0.21470864622988861 },
    /* q26 */ { 0.040505797944109245, 0.49154688173231653 },
    /* q27 */ { 0.32468899969820975, 0.9652799312740642 },
    /* q28 */ { 0.77957596947944363, 0.75684009205617653 },
    /* q29 */ { 0.99676139607434655, 0.77046369468403719 },
    /* q30 */ { 0.27936472723085559, 0.32697151503795879 },
    /* q31 */ { 0.17137349900086324, 0.45401626295453651 },
    /* q32 */ { 0.42684258561032346, 0.67060102343409289 },
    /* q33 */ { 0.73235968949654073, 0.90486718535696864 },
    /* q34 */ { 0.7923508939173376, 0.68399872823086239 },
    /* q35 */ { 0.3859472958742009, 0.92319517867573053 },
    /* q36 */ { 0.69075223189760204, 0.9536526754130954 },
    /* q37 */ { 0.97900220297342999, 0.71550572702639204 },
    /* q38 */ { 0.066600490926786438, 0.63790441541981036 },
    /* q39 */ { 0.35696864170728515, 0.48458955147513166 },
    /* q40 */ { 0.84184626659455564, 0.79354297738756241 },
    /* q41 */ { 0.5781282738731911, 0.79542124514493151 },
    /* q42 */ { 0.97234493891126517, 0.69490401945230318 },
    /* q43 */ { 0.4690128922003477, 0.89405015677696065 },
    /* q44 */ { 0.56544759607414929, 0.76261910335837368 },
    /* q45 */ { 0.16297307835455679, 0.89976847059475773 },
    /* q46 */ { 0.15687940576769607, 0.8208003058238349 },
    /* q47 */ { 0.52602210675290761, 0.44421714704630283 },
    /* q48 */ { 0.58254331842807527, 0.81810745344081137 },
    /* q49 */ { 0.19547355255994878, 0.50776176180127197 },
    /* q50 */ { 1.1137864882128021, 1.0572014004715464 },
    /* q51 */ { 0.45431368917027581, -0.021173916691282588 },
    /* q52 */ { -0.056349807088609594, 0.17899781628812519 },
    /* q53 */ { 1.0910761483691351, 0.96415162586462022 },
    /* q54 */ { -0.064117615939513178, 1.0438263642105834 },
    /* q55 */ { 1.0807081170891186, 0.96697274297249958 },
    /* q56 */ { -0.14348402865601426, 0.53329325296125674 },
    /* q57 */ { 0.092537827052714405, 1.0113005305462159 },
    /* q58 */ { 0.8797870290675841, 0.24102786790650241 },
    /* q59 */ { 1.0959620243168227, 0.55417337557253254 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { -1.334388935727842, 1.2140402307575311, -0.9781041322566334, 0.69674494728595948, -1.0192042914937633, -0.05924496426103032, -0.33579496988552099, -0.96184060868761545, -0.97497543841743206, -0.32325857969404265, 0.11131844633763369, 0.68679352850302133, 0.79528255030326778, 1.1169266300293827, -0.38789553078278605, 0.85246675069799449, -0.34447981740850298, -0.47776350578607618, 0.039531777685492542, -1.5323188678641004, -1.7356452190961513, 0.72921253119011253, 0.42743207272547379, 2.1196759165232049, 1.1357931179557383, -1.1282379069961255, 0.82869779512294861, -1.1853320186546179, -0.99531726493385764, 1.0032512170246515, 0.64576937608540175, 0.069290201324844536, 1.1074933860662057, -0.11929901422153913, -1.7577957035626635, -0.97481944578276192, -1.0079354385008354, 1.542776053395869, 0.70208773670281488, -0.099061702333802071, -1.2587619466383591, -1.1157050387629472, 1.7450239417660964, -0.90578551033759624, -1.48835119570103, -1.0084445941536107, -0.8277128000532793, -0.21024691715436392, -0.89580987314521354, -0.41417583874329511, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D3_N24_Q36_S2001) {
  // 3 次元, 入力点 24 個, クエリ 36 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.42366980249535757, 0.96214845055301312, 0.99848333762171948, 0.59894958878043769, 0.10052395834870242, 0.24103766157584805, 0.84207153726411788, 0.85315923302119845, 0.58853775857863067, 0.20021210294672775, 0.21703933618010229, 0.053929328963639223, 0.82711823957696617, 0.47888916751492183, 0.62440661672573494, 0.31908572683109182, 0.54108415893199258, 0.25311835718531828, 0.81547251906278384, 0.57342936969839597, 0.24800899901466866, 0.10872247996691953, 0.87866945676398067, 0.3159273034258242 },
    /* dim 1 */ { 0.20372451427918548, 0.43197894010878835, 0.78296897865818804, 0.98902757352028381, 0.51423124018793209, 0.47307205509821226, 0.55692940133940916, 0.84820071358133597, 0.86576198255457026, 0.1554175111368864, 0.0070331917224059071, 0.11267385643538863, 0.7810086522772377, 0.46820770908768439, 0.73164765350986027, 0.97216049193514176, 0.60182309587465077, 0.88884209703593964, 0.80933468858870072, 0.65196475646840701, 0.47371643504483796, 0.81165177990600557, 0.060932416508173937, 0.1161363008922871 },
    /* dim 2 */ { 0.47510025521741428, 0.33738700045109016, 0.22010496338709717, 0.45154098969295797, 0.16276506546739822, 0.73226247576273462, 0.40231820326953838, 0.25439843733133416, 0.058338634978327808, 0.71219351268266207, 0.95697561883406379, 0.57562133756369849, 0.77692031601780531, 0.54184079613895619, 0.80105659981320698, 0.81881992832388506, 0.056812289885695644, 0.97749821026317762, 0.49862489009164324, 0.80770587059368981, 0.0076380030650700093, 0.90096752432755201, 0.73628621344819112, 0.51177475147257356 }
  };
  std::vector<double> values = { -1.0850848363832497, 0.12002766697681722, 0.17361124083137974, -0.29406279375555722, -0.60550449173992715, -0.48311744014491448, 0.75156664613544077, 0.32325432453190323, -1.3536934236269267, 0.50015698178316725, 1.1724290170218445, -0.25138261096315029, 0.12293144343534265, -0.032475019781555974, 1.0028684414147886, 0.30392795837774439, -0.3315156292827795, -2.0785355100885914, -0.45350935505179196, 2.228552555329379, -0.8979056924783313, 0.84200709488380276, -0.32942199580900433, 0.75833679573952351 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.42291303198923513, 0.43686793857158968, 0.27034783607678403 },
    /* q1 */ { 0.31277298184341262, 0.41496997464990998, 0.2968360299722097 },
    /* q2 */ { 0.3110301474837075, 0.41480887966325358, 0.47799214814662583 },
    /* q3 */ { 0.34212657095257137, 0.51449462004877633, 0.19226403863928002 },
    /* q4 */ { 0.4298617183940136, 0.64332240466763779, 0.30323978529625201 },
    /* q5 */ { 0.284884128567641, 0.60691787407724274, 0.5639220664232435 },
    /* q6 */ { 0.37436211036878847, 0.73590675368276059, 0.49374169490579933 },
    /* q7 */ { 0.33595218363321377, 0.32510544740049213, 0.61534925995044176 },
    /* q8 */ { 0.49536013243024696, 0.22207053775298255, 0.61635519437180586 },
    /* q9 */ { 0.54398634742659191, 0.43445408938593932, 0.86192008964080946 },
    /* q10 */ { 0.17959739743820863, 0.30418945814011145, 0.31444978939218504 },
    /* q11 */ { 0.27203251582113819, 0.32695212260106066, 0.28931951880561402 },
    /* q12 */ { 0.42366980249535757, 0.20372451427918548, 0.47510025521741428 },
    /* q13 */ { 0.96214845055301312, 0.43197894010878835, 0.33738700045109016 },
    /* q14 */ { 0.99848333762171948, 0.78296897865818804, 0.22010496338709717 },
    /* q15 */ { 0.59894958878043769, 0.98902757352028381, 0.45154098969295797 },
    /* q16 */ { 0.10052395834870242, 0.51423124018793209, 0.16276506546739822 },
    /* q17 */ { 0.24103766157584805, 0.47307205509821226, 0.73226247576273462 },
    /* q18 */ { 0.40723351563712201, 0.56251840578330969, 0.76998417317821222 },
    /* q19 */ { 0.25806970318627598, 0.13577690601458675, 0.61198413207761782 },
    /* q20 */ { 0.33583940075501312, 0.33872047466201172, 0.24136912914124214 },
    /* q21 */ { 0.23507884668271029, 0.44793764437917277, 0.96723691454862071 },
    /* q22 */ { 0.3208040586403475, 0.55802716803129138, 0.10978867767654693 },
    /* q23 */ { 0.28610204200820505, 0.93050129448554064, 0.89815906929353129 },
    /* q24 */ { 0.52734302375300735, 0.24254845715213635, 0.44970068893254334 },
    /* q25 */ { 0.8291687557703078, 0.69662762300030534, 0.44434335574990397 },
    /* q26 */ { 0.79037974057272387, 0.83856957468951021, 0.17264741720628113 },
    /* q27 */ { 0.24205365630936562, 0.28401803956658811, 0.67882824919406304 },
    /* q28 */ { 0.22899171171861418, 0.37391218117221003, 0.72485321118467905 },
    /* q29 */ { 0.85681167482453668, 0.69034148275468687, 0.330158916238394 },
    /* q30 */ { 0.12816735858696979, 1.1327361969612815, 0.20817916218163138 },
    /* q31 */ { 0.82824877546752029, 1.0678107339421388, 1.0650057469050227 },
    /* q32 */ { 0.68842990585799857, 0.18082556652900067, 0.5120315487594066 },
    /* q33 */ { 0.31117468509210988, 0.75792761355031768, 0.053528768477320715 },
    /* q34 */ { 1.0020594966751837, 0.51623512164904162, 0.85658643004764157 },
    /* q35 */ { 0.66448971249919708, 0.048033230161617813, 0.63268755031721402 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { -0.58674529448147905, -0.65524251009576595, -0.5515454470124117, -0.46685020832064833, -0.315889483639955, -0.20429224832216319, -0.15702858672482406, -0.27513007863163969, -0.23670621754766114, -0.27814926136011697, -0.24911399986047134, -0.45753955621549613, -1.0850848363832502, 0.12002766697681747, 0.17361124083137974, -0.29406279375555722, -0.60550449173992715, -0.48311744014491442, 0.87271755759223213, 0.62924688876134571, -0.99149526443079061, -0.45305324653337342, -0.4685100605113533, -0.88730377585542208, -0.59835610119869675, 0.12648872242644707, -0.340319964328406, 0.13071478735366676, -0.17538616259055329, 0.539333453116707, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D3_N30_Q36_S2002) {
  // 3 次元, 入力点 30 個, クエリ 36 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.88875935735301792, 0.15125649569525612, 0.32528248108883462, 0.35493269972285502, 0.10798434249939981, 0.105896447770363, 0.13234777735826653, 0.8376069359747651, 0.90171315479011893, 0.57009368250240733, 0.68025217984822384, 0.31537469385406836, 0.15779570844928792, 0.41270897425991082, 0.81343934242475269, 0.17968899379229719, 0.10005903453730125, 0.75020172969446053, 0.56650918434765674, 0.94815301115156703, 0.62284525008273306, 0.68064034389681938, 0.449772582214923, 0.85785333639759342, 0.53432757009417786, 0.70405255701421565, 0.5007780573790348, 0.25672774451017888, 0.095574483871260774, 0.63902262285528244 },
    /* dim 1 */ { 0.9607112275305757, 0.69252201253727752, 0.17162746249476968, 0.93368288033789049, 0.40901648328815676, 0.45515356989905009, 0.091062597726849326, 0.95632326095277154, 0.24748681048479015, 0.57319134176920528, 0.44003079673984291, 0.77137814694592344, 0.26767852974085971, 0.64799957110640349, 0.25062584486478046, 0.18131721750283203, 0.24821263920907355, 0.45310764089901034, 0.6806246110161932, 0.90824717315906023, 0.98848092007032473, 0.048251838218292931, 0.6667318677572116, 0.45240696213359766, 0.9836089120818029, 0.53915553318213916, 0.34367231893203842, 0.8022981439682958, 0.72857178921067189, 0.51547273656615289 },
    /* dim 2 */ { 0.65811261137113175, 0.15212248082047675, 0.89643925589018936, 0.036593197500203622, 0.82889273738768721, 0.61438542173183031, 0.1915634375563483, 0.13642450118135618, 0.76334490372779229, 0.54419346504020194, 0.13358007789903337, 0.59357833127774862, 0.29585906221914771, 0.22346408761689007, 0.45862726135581755, 0.13741529633683303, 0.88071280701473531, 0.068182847820380199, 0.87781205215583069, 0.50461204920317948, 0.778500960783576, 0.67833068004578501, 0.53931449796693143, 0.40118063373176105, 0.11575791002803659, 0.24382314511219005, 0.2170859052095816, 0.19938822568675174, 0.56402696428282961, 0.90092763580957025 }
  };
  std::vector<double> values = { 0.24825668777847518, 0.68969593040334609, -0.99798608066382122, -0.46392484457484062, -0.73513118181891179, 0.019999286620207633, -0.34604446176095283, 0.8741625833360086, -0.51347912655288963, -1.0576899401853836, -1.7482941515179353, 1.3633646472106404, 0.67887169679839177, -2.0268735222201113, -1.096459906590969, 2.4934217529899141, -0.93338319160601591, -0.71234898677888858, -1.3288739452826339, -0.32715283792332528, 0.43231297025499255, -0.38931921625181348, -0.94822513673676034, 0.51047327862968239, 0.83806646458014533, 1.4149803554827656, -0.58249914856404972, 0.29660527246384694, 0.18809173551114039, 1.4189468476135851 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.10846943588429789, 0.38075014901141124, 0.56267215764643597 },
    /* q1 */ { 0.83691646013453536, 0.71403323235689209, 0.32151008230712169 },
    /* q2 */ { 0.8991197149230743, 0.64221304332700591, 0.58181254950846617 },
    /* q3 */ { 0.67928410365967251, 0.7863223737958116, 0.80383831503002723 },
    /* q4 */ { 0.82183711784900315, 0.54401943417877907, 0.68089144616006381 },
    /* q5 */ { 0.63666465065776379, 0.24570971194100141, 0.80976061886833417 },
    /* q6 */ { 0.15980557647397467, 0.32100253872276252, 0.80510755550611057 },
    /* q7 */ { 0.10237857716958121, 0.46023862040173813, 0.72200448260427064 },
    /* q8 */ { 0.35339379605991006, 0.46333161751989405, 0.87208630809195586 },
    /* q9 */ { 0.29308712024520456, 0.33608233038953822, 0.87674310902554553 },
    /* q10 */ { 0.34822831520026265, 0.7016734508963367, 0.76230817865248091 },
    /* q11 */ { 0.74852129717037408, 0.96026205821044086, 0.51424588284648098 },
    /* q12 */ { 0.88875935735301792, 0.9607112275305757, 0.65811261137113175 },
    /* q13 */ { 0.15125649569525612, 0.69252201253727752, 0.15212248082047675 },
    /* q14 */ { 0.32528248108883462, 0.17162746249476968, 0.89643925589018936 },
    /* q15 */ { 0.35493269972285502, 0.93368288033789049, 0.036593197500203622 },
    /* q16 */ { 0.10798434249939981, 0.40901648328815676, 0.82889273738768721 },
    /* q17 */ { 0.105896447770363, 0.45515356989905009, 0.61438542173183031 },
    /* q18 */ { 0.36404183405698959, 0.70968885902616341, 0.40852120944731934 },
    /* q19 */ { 0.38257363803449568, 0.71905500735156758, 0.56644641462234002 },
    /* q20 */ { 0.20547458886266456, 0.74997496807829767, 0.57880264778028911 },
    /* q21 */ { 0.41575433777173998, 0.56627640463856022, 0.14285127935975506 },
    /* q22 */ { 0.33903901250090357, 0.49110391252868102, 0.68654310121394457 },
    /* q23 */ { 0.74843797962643799, 0.48393984934987527, 0.65105413477066565 },
    /* q24 */ { 0.55541091449898961, 0.50541107863927692, 0.13010793603592169 },
    /* q25 */ { 0.82342514969874703, 0.95802664603327881, 0.16009803079949186 },
    /* q26 */ { 0.67994082477527718, 0.96880000946020117, 0.14183810171148953 },
    /* q27 */ { 0.16025489236285984, 0.75246423839565946, 0.53163846691283334 },
    /* q28 */ { 0.51792752482275239, 0.49588866407958354, 0.86171847268499158 },
    /* q29 */ { 0.61952366558500949, 0.51236615060196855, 0.52605900676614437 },
    /* q30 */ { 0.91656435935322333, 0.14441852566583971, 0.43089170216603612 },
    /* q31 */ { 0.96358492624772696, 0.90563272197656997, 0.17183834393969899 },
    /* q32 */ { 0.42084433519322839, 0.17018610636835088, 0.024557764445127986 },
    /* q33 */ { 0.68464570780291267, 0.30980576808527538, 0.22158880827837013 },
    /* q34 */ { 0.46213613779348361, 0.53860060970523393, -0.0091015421844041766 },
    /* q35 */ { 0.84725491022114874, 0.88637003056042807, -0.024168164268441775 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { -0.26783415780890441, 0.61811584488128246, -0.02047549951701394, 0.19266064009111217, 0.41604942186721361, -0.12045939396373337, -0.66162529186713548, -0.36510583782339512, -0.39461036777349323, -0.31188840161879083, -0.36090010533385297, 0.29787082117257158, 0.24825668777847512, 0.68969593040334609, -0.99798608066382122, -0.46392484457484034, -0.73513118181891179, 0.019999286620207633, -0.33175443750473649, 0.20756975523694149, 0.77572819136089044, -0.52929911055729451, -0.89641056100214778, 0.96471006312163532, -1.00357938708201, 0.84242408484692743, 0.80098809490436784, 0.38497341886502856, 0.78365283491630833, -1.0364840005391394, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D3_N45_Q48_S2003) {
  // 3 次元, 入力点 45 個, クエリ 48 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.29462974956183208, 0.99841437757973628, 0.20373787624756923, 0.71080941689681121, 0.35118592246639868, 0.38816597989634827, 0.30080822326308254, 0.79011091171750225, 0.10665395777975939, 0.54833273830379425, 0.0052054083587200761, 0.90273943650917987, 0.23432351765998971, 0.051436316062043574, 0.40952685484447371, 0.42389851373303944, 0.86236898399850859, 0.96508048710254102, 0.9704722736299578, 0.3186496044858631, 0.31987824303438461, 0.92137024961156622, 0.30471133428259811, 0.44050844082030194, 0.85196108862315156, 0.63477517765825209, 0.88894356571982081, 0.94313056989696453, 0.2585249898055223, 0.38000224556699247, 0.83115856451718761, 0.66045790161541973, 0.99985885569008959, 0.94438477752657768, 0.64636285987073772, 0.36765831606578547, 0.54727183331000395, 0.0037046647688452339, 0.72367375110429455, 0.80557123185682011, 0.77230383860120955, 0.98065523485826001, 0.24031264269503871, 0.54052928586581217, 0.46653511513256551 },
    /* dim 1 */ { 0.88115892208816538, 0.98212728096900015, 0.23825684536168479, 0.018866731475235876, 0.19327812686546286, 0.015390152498474419, 0.92119186197436342, 0.64655658008089156, 0.91601373621270499, 0.081615263402526783, 0.050200401942693262, 0.73595615087778521, 0.24092275960125786, 0.46398016389372809, 0.4842731673057763, 0.6233027781317988, 0.37937613718726448, 0.51473993080620317, 0.97230847619771743, 0.25828272524632301, 0.66391858507495882, 0.27275197726850287, 0.7736882851189566, 0.46035693246398679, 0.30207260068790109, 0.32804122233437549, 0.31202619381116803, 0.70927701828687928, 0.068230012152799113, 0.94856149516529709, 0.33598431684947438, 0.12231919169555749, 0.76848611487251361, 0.71405586204775351, 0.43381823594660995, 0.67114106652786054, 0.96596451564131691, 0.80326572142854813, 0.63801090505329761, 0.20222558309303096, 0.76366881531676079, 0.13136258864461836, 0.59112684033663587, 0.4291046602131634, 0.79572187058041266 },
    /* dim 2 */ { 0.65134578304595714, 0.1419778228426869, 0.26560503490699527, 0.12728198975367944, 0.50061274428480096, 0.42050964824692449, 0.97368737957138396, 0.8529485369375337, 0.38465026873097263, 0.31316943976952061, 0.2240181632292253, 0.6574299427203586, 0.77384450153014417, 0.29086639719452456, 0.029379363548602266, 0.71133258992569071, 0.5224318133497623, 0.35853746409945042, 0.87307685894876708, 0.85134890643629613, 0.95069170735075792, 0.51520026648488637, 0.41556899293625627, 0.23262528641932312, 0.00737905527101268, 0.99613527645576105, 0.13299755471150565, 0.4784412381147265, 0.81223823268173634, 0.081878508121756344, 0.75860980720244531, 0.49638315597802396, 0.33526077396024834, 0.95304321434156847, 0.88387568669375183, 0.79734913615428515, 0.73016955315438548, 0.17452866823793045, 0.74701289742280808, 0.30974337774963978, 0.47236272598195006, 0.52174997998159833, 0.75878664208876812, 0.64671521546423827, 0.63502910460779383 }
  };
  std::vector<double> values = { 0.25129588453893009, -1.5686477569013255, -0.20965487611462547, 0.59852983789446623, 1.595941237605278, 0.7471242806841969, -0.36948088797794593, -0.011750058350027301, -1.0996728186448987, 0.60819604955904483, 0.68894404690058797, -1.0758125550991287, 0.94675921176744449, -0.2040854741106623, 0.41851936298375153, -0.42144923784656957, 0.048123527218441806, 0.29408381028389874, 0.50842936105055481, 1.4849513310325462, 0.47032481982962454, -0.08544137221207744, 0.87274434525686606, -0.14236077943312619, 0.33183510611658168, 0.75471409521271526, -0.39807350872412156, -0.073132852190074982, 1.462933237262112, 1.2283013957691666, 0.6708178687780314, -0.14643601726912989, -0.25121054899130385, -1.3308477503656873, -0.34324865586080144, -0.15697826909320997, -0.43590848516848829, 1.1167886370781652, -1.010981088428297, -0.35679227237409072, -0.63039534085199966, 1.6343426217471537, 0.12476343271895833, 0.52972127501995581, 0.19084936317331383 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.81494029418436276, 0.63423979095879779, 0.12849925390563754 },
    /* q1 */ { 0.69073427693240552, 0.89338017896528776, 0.88249425150402627 },
    /* q2 */ { 0.97384278542622127, 0.64655326044065076, 0.67078270680804553 },
    /* q3 */ { 0.54996160537057426, 0.65680188285786278, 0.96838939442986793 },
    /* q4 */ { 0.11746831100852065, 0.45042986364268645, 0.17969814805257064 },
    /* q5 */ { 0.090288653113172856, 0.5596595373098332, 0.4157751520582661 },
    /* q6 */ { 0.49437569218078914, 0.21385322535290163, 0.09701464295062992 },
    /* q7 */ { 0.38390415391831412, 0.8055540073046249, 0.86297444405770318 },
    /* q8 */ { 0.69695058342032301, 0.79586201457814676, 0.14712411711832346 },
    /* q9 */ { 0.65997614165358853, 0.67925863603199366, 0.065153687446014547 },
    /* q10 */ { 0.16747661387820165, 0.30917764462597064, 0.20246723971983685 },
    /* q11 */ { 0.33231988908689353, 0.19789928652134756, 0.16157113785962557 },
    /* q12 */ { 0.43391856225350378, 0.65545439851108289, 0.60216147573349477 },
    /* q13 */ { 0.19234479248949016, 0.63130183443675225, 0.22758585547932839 },
    /* q14 */ { 0.11662656822331158, 0.73923697666348442, 0.31640358177492101 },
    /* q15 */ { 0.42463013207304001, 0.87098404162649579, 0.46566153970504798 },
    /* q16 */ { 0.29462974956183208, 0.88115892208816538, 0.65134578304595714 },
    /* q17 */ { 0.99841437757973628, 0.98212728096900015, 0.1419778228426869 },
    /* q18 */ { 0.20373787624756923, 0.23825684536168479, 0.26560503490699527 },
    /* q19 */ { 0.71080941689681121, 0.018866731475235876, 0.12728198975367944 },
    /* q20 */ { 0.35118592246639868, 0.19327812686546286, 0.50061274428480096 },
    /* q21 */ { 0.38816597989634827, 0.015390152498474419, 0.42050964824692449 },
    /* q22 */ { 0.30080822326308254, 0.92119186197436342, 0.97368737957138396 },
    /* q23 */ { 0.79011091171750225, 0.64655658008089156, 0.8529485369375337 },
    /* q24 */ { 0.52431194075588405, 0.068854672097015956, 0.45844640211247423 },
    /* q25 */ { 0.71823688579411993, 0.54018740801375076, 0.86841211181564271 },
    /* q26 */ { 0.73301456673611987, 0.16227238739429423, 0.40306326686383187 },
    /* q27 */ { 0.6405690187644949, 0.38092972914049272, 0.9400054815747565 },
    /* q28 */ { 0.30663236554602147, 0.36126500633373054, 0.14749219922779877 },
    /* q29 */ { 0.90274977694773662, 0.54432657773707183, 0.5004365257322444 },
    /* q30 */ { 0.4822138997994258, 0.5262037191724811, 0.67902390269496449 },
    /* q31 */ { 0.246424253732756, 0.15457638587702849, 0.7930413671059402 },
    /* q32 */ { 0.80918090207611304, 0.680411822044794, 0.70220799881045282 },
    /* q33 */ { 0.82445147067864089, 0.32797152299114163, 0.72318805156970867 },
    /* q34 */ { 0.91020232756806907, 0.67861207812715529, 0.67806571925601011 },
    /* q35 */ { 0.20126618694430881, 0.60474390129792099, 0.67102139525111548 },
    /* q36 */ { 0.50454502704840354, 0.84296734493900582, 0.65439512631327057 },
    /* q37 */ { 0.88094740805206573, 0.18264140582534097, 0.57827015029316298 },
    /* q38 */ { 0.27536820987644384, 0.12186685682276266, 0.27121988762738125 },
    /* q39 */ { 0.67893361840885103, 0.64401315589292751, 0.76773742383397681 },
    /* q40 */ { 0.24759541403069893, 0.30062152980387247, 1.0391175883285255 },
    /* q41 */ { 1.1057455694471068, 1.1112705109520604, 0.76021196664975943 },
    /* q42 */ { 0.056659590085204631, -0.032723017547112571, 0.73779017173731043 },
    /* q43 */ { 0.17631816070920439, 0.85474372924247166, 0.80199596831896935 },
    /* q44 */ { 0.5258727448325663, 1.053298903758533, -0.040779122868202386 },
    /* q45 */ { 0.62301145975565275, 0.19718146883225371, 1.1377551631664411 },
    /* q46 */ { 0.26525094971774899, 1.0402816264796768, 0.43133579311756065 },
    /* q47 */ { 0.74406107154468992, 1.0373253781515308, 0.51971674393610412 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { -0.26737595919807394, -0.40695194061539203, 0.14017842086017918, -0.11882243082532346, 0.50504164321296052, 0.30804158047253705, 0.50945708847384674, -0.12301070560250459, -0.043259386784927897, 0.1025020269920436, 0.17343076491476306, 0.37408459291604507, 0.29296643640089137, 0.55099171780203005, 0.1714436723948668, 0.46399665475771446, 0.25129588453893009, -1.5686477569013257, -0.20965487611462563, 0.59852983789446612, 1.595941237605278, 0.7471242806841969, -0.36948088797794593, -0.011750058350027287, 0.30034413170753327, -0.17749935710541345, -0.25161414482161032, 0.20573271967596046, 0.10443224343456303, -0.012504662485816343, 0.054136018586693119, 1.2048462245147782, -1.0274476445678518, 0.57044593655067433, -0.99138906109604896, -0.025904740140568171, -0.028749249035340374, 1.0456009594388636, 0.37295254713156517, -0.75900836658428816, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D3_N60_Q60_S2004) {
  // 3 次元, 入力点 60 個, クエリ 60 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.64020301650983003, 0.66278754057419109, 0.58031493079302165, 0.45684378199051934, 0.37723155257979457, 0.83269273520213971, 0.92234543871825292, 0.29210415891275054, 0.42039110668672686, 0.31607588474434667, 0.55571354101001413, 0.067204087492562459, 0.12901599908667671, 0.69463505058936992, 0.48017150301298317, 0.31275265961638199, 0.099469247136711347, 0.52698167659790673, 0.51508734550791235, 0.66460365577387326, 0.68720446009079372, 0.15396274885980199, 0.53134149069132208, 0.55570601104045558, 0.68848655558778338, 0.31772176515894701, 0.017501238753390269, 0.42408493348598242, 0.79872960910031743, 0.11019768666593688, 0.40099387801849773, 0.63457468286183938, 0.66323558018390905, 0.69419772923625123, 0.057775031023606704, 0.0030011667130993569, 0.76547454529237935, 0.22384279011327501, 0.35159991541232005, 0.75021795806844094, 0.10574978164499116, 0.84516586765416113, 0.09096519519026669, 0.35704487397170015, 0.58648351938960963, 0.76469077794749352, 0.98117198917590265, 0.1016589989507074, 0.76043322942654301, 0.7919052090336719, 0.90399902133869514, 0.59071921885744239, 0.0012958582123365758, 0.84240484380817382, 0.53398386768098893, 0.53277173390521337, 0.59789235040167898, 0.21565505210816938, 0.061268927919925886, 0.38531126246751313 },
    /* dim 1 */ { 0.29090627899726917, 0.549091483394749, 0.54776089471231926, 0.61935207854684593, 0.16712451509988968, 0.29569053583469862, 0.53148257835278623, 0.13385535032271256, 0.42451209676187429, 0.35015011843828292, 0.94132751920063895, 0.50149176705333376, 0.30439772406151411, 0.099306543120910251, 0.84608220818856339, 0.12329823013764285, 0.11473882948004688, 0.98994063934524068, 0.49801347840099952, 0.75626506718518882, 0.69226903113134131, 0.43769413275177915, 0.0012647654091541005, 0.33710197641075834, 0.64476845613558742, 0.17359553271976469, 0.29309133323636427, 0.66075078203668547, 0.023849329350458581, 0.43290523575057716, 0.78056924590738952, 0.89453865489157569, 0.24461759395415839, 0.33742951995809045, 0.0048210774845829363, 0.10533094101721252, 0.30802488091459601, 0.31750242623050762, 0.2762449826235831, 0.16602680038250728, 0.2290841443172853, 0.49427975786995815, 0.10227499709980881, 0.77172692585712466, 0.33437499662624692, 0.22380370078860645, 0.81306064465521932, 0.61436955585666797, 0.37618943762212476, 0.11257493200262447, 0.63266629397691398, 0.99175433303245908, 0.64795690108335402, 0.46030275032803958, 0.35048654010694902, 0.41107045245910079, 0.84998613887919694, 0.47095140604434749, 0.47989844540437765, 0.51100315142633101 },
    /* dim 2 */ { 0.91627287393443158, 0.052734003868642576, 0.18573211345174745, 0.70484364747788697, 0.6076451206152601, 0.87319666792296469, 0.69965766589095779, 0.6168445415493311, 0.83563595902576249, 0.81905365230140492, 0.5752750811585664, 0.91545185807931906, 0.988428865674289, 0.28830301794060187, 0.14722814681314633, 0.021970754921982083, 0.35143575349554268, 0.23402663978411753, 0.86015282360118583, 0.097450390224619765, 0.73602317954483221, 0.95119044828614074, 0.10804594170015414, 0.85705461838572594, 0.58629011418833388, 0.80048319110889066, 0.14521294475258961, 0.8062658265600493, 0.059393777189006514, 0.010152846803304971, 0.93691182365637327, 0.18507785006146638, 0.18966574870201525, 0.6066035466519577, 0.92589812570994479, 0.90820207665147723, 0.73882784703721549, 0.58442071648352567, 0.21353309561111566, 0.92489742289340393, 0.018437795811232727, 0.77126948359065972, 0.95707561575889499, 0.39678338149316839, 0.12169326266972347, 0.39114494625653651, 0.34823389954440342, 0.2216012892712389, 0.99379181698357177, 0.45850350412467356, 0.33691593928295116, 0.96654560758780783, 0.27343943571365759, 0.81624105719559881, 0.017725881347701145, 0.28227075969377624, 0.55997796384535681, 0.52845644997506669, 0.43239569173427927, 0.28539754518370331 }
  };
  std::vector<double> values = { -0.96303135125056849, 0.38410175378803524, -1.6044321316079406, -2.5033477261671506, 1.0269307817087441, 1.6136398946790229, -0.99742149093913135, -0.40348249417199683, -1.3907188175359206, -1.3729670540934065, 1.2809283043479098, -1.0100181421020447, 1.3895301565464873, 0.23260284110621751, -0.74620078241100818, -0.017491648425306861, -0.60155702329330296, 1.0048656861173217, -0.13474697155432633, 1.1812321484968631, 1.5476870423342006, 0.75172731434722917, 0.023950454593032952, -0.39723896977924517, 0.9679546771734262, 1.7054432418777514, -0.2390051215581285, -1.3250281497269076, 1.6517961648937816, -0.1133220025582157, -1.7795487445089886, -0.40526307185655336, -0.49300505386398913, -1.5041118025495575, -0.82958534105413806, -1.2219605171174863, 1.2146885213044438, 0.52931081003827518, 0.52511748351748322, -1.3277336027610047, -1.0080003882816997, 1.3720138845020255, -0.99393262248258718, 0.47158540347069916, -0.44756823982004845, -0.5780513887158284, 2.7962415419958551, -0.56322859283917259, -1.188968324647488, 1.7802052731237252, 0.11581733858266764, 0.83288216762238609, -1.4375462718203411, -0.29942334062375475, -0.078514138033964134, -1.9766859584566361, -1.1173945714152711, -0.59008204937865416, -0.88980658897993836, -0.42255222755056837 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.54420190677225255, 0.12472471625105114, 0.051784088789710969 },
    /* q1 */ { 0.35445472829093627, 0.11957469022739187, 0.81703082031539265 },
    /* q2 */ { 0.81980211089318322, 0.67039517756873357, 0.5925512147921318 },
    /* q3 */ { 0.79536027671059795, 0.75714164679295148, 0.68761508814200034 },
    /* q4 */ { 0.43265809544298184, 0.23722223979148874, 0.96604843032753995 },
    /* q5 */ { 0.30416998736031531, 0.11167960192166593, 0.90208858886778365 },
    /* q6 */ { 0.49114038434457563, 0.20235613306999822, 0.067358960159890208 },
    /* q7 */ { 0.26933486277428514, 0.60109003780553494, 0.16609495701784838 },
    /* q8 */ { 0.27966168112229084, 0.72922124609193373, 0.1662117672785566 },
    /* q9 */ { 0.17333101171049101, 0.63532847521979063, 0.16310542965033695 },
    /* q10 */ { 0.33104665960072599, 0.68579546033217176, 0.2627525906903142 },
    /* q11 */ { 0.34137347794873163, 0.81392666861857066, 0.26286940095102246 },
    /* q12 */ { 0.23504280853693182, 0.72003389774642745, 0.2597630633228028 },
    /* q13 */ { 0.1676505304521009, 0.10440072538606818, 0.812856983754911 },
    /* q14 */ { 0.11736578952147994, 0.096505637080342238, 0.89791475230730189 },
    /* q15 */ { 0.13517603153724744, 0.17139979872457503, 0.91354743729838794 },
    /* q16 */ { 0.057663445645592781, 0.49708075648174088, 0.16260162913519777 },
    /* q17 */ { 0.44554439627740844, 0.18379574369915674, 0.11631076372574384 },
    /* q18 */ { 0.50120975909703303, 0.34304424295396996, 0.15880574983057913 },
    /* q19 */ { 0.44620499052482515, 0.27110118737360545, 0.09373074863763059 },
    /* q20 */ { 0.64020301650983003, 0.29090627899726917, 0.91627287393443158 },
    /* q21 */ { 0.66278754057419109, 0.549091483394749, 0.052734003868642576 },
    /* q22 */ { 0.58031493079302165, 0.54776089471231926, 0.18573211345174745 },
    /* q23 */ { 0.45684378199051934, 0.61935207854684593, 0.70484364747788697 },
    /* q24 */ { 0.37723155257979457, 0.16712451509988968, 0.6076451206152601 },
    /* q25 */ { 0.83269273520213971, 0.29569053583469862, 0.87319666792296469 },
    /* q26 */ { 0.92234543871825292, 0.53148257835278623, 0.69965766589095779 },
    /* q27 */ { 0.29210415891275054, 0.13385535032271256, 0.6168445415493311 },
    /* q28 */ { 0.42039110668672686, 0.42451209676187429, 0.83563595902576249 },
    /* q29 */ { 0.31607588474434667, 0.35015011843828292, 0.81905365230140492 },
    /* q30 */ { 0.69521048728913548, 0.22846653968988823, 0.92058514841391781 },
    /* q31 */ { 0.074370113106936697, 0.053548037292195871, 0.94148687073441994 },
    /* q32 */ { 0.84138933407239791, 0.45383600798745549, 0.84672474143726473 },
    /* q33 */ { 0.45804061176320504, 0.63929136215419446, 0.89853232362877955 },
    /* q34 */ { 0.37421339300669137, 0.44101092925172414, 0.40536360483442146 },
    /* q35 */ { 0.54200468397321122, 0.12321514116266852, 0.53767402283700227 },
    /* q36 */ { 0.26995933742881084, 0.33382627233439527, 0.70173718439246535 },
    /* q37 */ { 0.70031812296818652, 0.33354785830969697, 0.95503234545900173 },
    /* q38 */ { 0.62485954978675928, 0.28949629529020265, 0.15567950568586936 },
    /* q39 */ { 0.037638134888498487, 0.1489562053604736, 0.5355555352312672 },
    /* q40 */ { 0.64206756317997271, 0.55198406217481932, 0.083996054603124676 },
    /* q41 */ { 0.18419618010118879, 0.42013265411168893, 0.83901327623972732 },
    /* q42 */ { 0.47686581430266461, 0.37998882878257323, 0.10483688143822306 },
    /* q43 */ { 0.53403933974368789, 0.50195276926059385, 0.65656376241894598 },
    /* q44 */ { 0.56398730695954569, 0.37511186146192732, 0.43045839531788188 },
    /* q45 */ { 0.33834065077767228, 0.30953587756726358, 0.95619803295853567 },
    /* q46 */ { 0.36591927117183815, 0.79658541929793092, 0.36952459841020158 },
    /* q47 */ { 0.54507471399390928, 0.8477011832554554, 0.61693085578048446 },
    /* q48 */ { 0.46413169281916111, 0.30964582166069277, 0.98045883097154607 },
    /* q49 */ { 0.49890716497593657, 0.52197071180278687, 0.82521774389546743 },
    /* q50 */ { -0.011783136366659369, 0.61552551523108734, 1.0179328781343546 },
    /* q51 */ { 0.49857541204909206, 0.94767200720988953, 0.89347708606594778 },
    /* q52 */ { -0.11541131012275573, -0.010420497189871675, 0.39529129634340765 },
    /* q53 */ { -0.005606912256230917, 0.3600101083340288, -0.076383261449834733 },
    /* q54 */ { 1.0395540521068096, 0.52120382449922698, 1.1031117393767069 },
    /* q55 */ { 0.37293289451398182, 0.70926477500898044, 0.079552952759856438 },
    /* q56 */ { 0.49861464672758316, 0.43753641532350196, 1.1344739472217491 },
    /* q57 */ { 0.97734346525302684, 0.17442804456802946, 0.86648837135082846 },
    /* q58 */ { 1.0188445277806144, -0.043751318008587697, 0.88654058604394437 },
    /* q59 */ { 0.36783822491977169, 1.0023082315065079, 0.048005190767196282 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.39493520825688572, -0.2138395490273467, 1.0786154426410874, 1.0448473152533271, -0.53027609833615075, -0.36145208110499549, -0.1299058929215717, -0.46132590133974138, -0.32305084266807682, -0.71507441240718472, -0.31509904983251269, -0.17682399116083253, -0.56884756089995503, -0.18739627761646677, -0.33500880969411473, 0.21977006470604221, -0.58827549719396455, 0.021002012466290212, -0.4944127131982915, -0.0046141356904591535, -0.96303135125056827, 0.3841017537880354, -1.6044321316079404, -2.5033477261671502, 1.0269307817087439, 1.6136398946790229, -0.99742149093913124, -0.40348249417199666, -1.3907188175359206, -1.3729670540934062, -1.1453824770057877, -0.91175898176836312, -1.0931949077933063, -0.95714785803165847, -1.283384003917645, 0.68836138947586401, -0.42182812202756581, -1.075999837949029, -0.4702866468420186, -0.53429523130613243, -0.08027611487933585, -0.97713731241542434, -0.089016619380113626, -2.0052306349211055, -1.5694453369445807, 0.38455577686439035, 0.46738784927328664, -0.19538173383031698, -0.0073422127542425719, -0.69930085442031586, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D4_N24_Q32_S3001) {
  // 4 次元, 入力点 24 個, クエリ 32 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.91770152056839982, 0.06635408917705321, 0.35910197995854731, 0.9510938939328375, 0.98000980196375642, 0.35104136484194792, 0.16746639168751176, 0.036765685518760804, 0.73042238694489514, 0.92856375773497035, 0.064072322951254645, 0.68797676755395498, 0.12848165213185236, 0.59545673441187907, 0.35186874328237572, 0.24888104593899885, 0.63939838493464152, 0.70667926637166933, 0.87199514031809255, 0.70863498355076493, 0.23805113292182123, 0.084417052753366195, 0.95643106203548778, 0.93523298803948696 },
    /* dim 1 */ { 0.8299318587847142, 0.68299353974147436, 0.37737236879266023, 0.83561564502327412, 0.49984841504709321, 0.37787971839368473, 0.90528482920717557, 0.7521629727236615, 0.23267834616955629, 0.55191977826436955, 0.89960186556457478, 0.96951339119862756, 0.34507741324548447, 0.35836137249539035, 0.15213378128101218, 0.27299477315568055, 0.9647659302306546, 0.56430959257806601, 0.23614765736420873, 0.42877550271558362, 0.11409615496256342, 0.61417599470570861, 0.34350147228532812, 0.87609519067314001 },
    /* dim 2 */ { 0.79404892850298248, 0.46784649377867038, 0.42541928146752173, 0.71973988870661632, 0.22847831978168642, 0.48144617131079281, 0.19120430529410215, 0.43884786848685597, 0.2801794549766905, 0.93060023955838223, 0.30058528031520382, 0.47074945371195787, 0.16292169365143916, 0.03783847896860193, 0.76426169466644212, 0.47655477276099789, 0.54453994540600137, 0.96398695508390775, 0.59788177613584947, 0.96119081231239667, 0.35191840377241834, 0.5807939813258346, 0.62034784830656242, 0.10389762061350083 },
    /* dim 3 */ { 0.71961447745532503, 0.32079267982495441, 0.0066549704728502412, 0.96497240159320896, 0.81193133899212089, 0.52003564166937699, 0.95383747338527536, 0.42092810692971927, 0.19603537784617209, 0.83866321054492476, 0.76876829300329319, 0.10787819063663828, 0.26726720872114407, 0.094670672830381886, 0.69845196320882041, 0.41356483467095329, 0.74046559244263321, 0.60326430534548081, 0.67467663273286493, 0.79861497734472753, 0.059752677344821481, 0.67184468786826246, 0.32646039031118768, 0.902094321224574 }
  };
  std::vector<double> values = { 1.0652706021565348, -1.5971344937365397, -1.7912038254432701, -2.4443898095752372, 0.069528009958223252, -0.3592643225475331, -0.51171861529199258, -0.99742279596451899, -2.8793091571026577, -0.016139820522189974, -1.2918603975523655, 0.79965924068914584, -0.667671521537054, -0.70744219725059221, -0.093457608560668065, 1.7606753626772205, -0.35581560774738408, -0.39339261902125172, -0.75777892399071667, 1.4223561825954463, -0.47363639716342587, 0.40239386200336724, -0.50096599952793397, -0.10820582818873729 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.89547042803221721, 0.70377806559778056, 0.44350443418333796, 0.57359574372396926 },
    /* q1 */ { 0.94809385330799378, 0.67699851636270991, 0.49330252118226969, 0.74501458591528336 },
    /* q2 */ { 0.8846873178878244, 0.80125140795177519, 0.47814094060215756, 0.82781562634157235 },
    /* q3 */ { 0.83206389261204783, 0.82803095718684572, 0.42834285360322583, 0.65639678415025826 },
    /* q4 */ { 0.72297147626595781, 0.63110178543107753, 0.46911234770340016, 0.50135423081039143 },
    /* q5 */ { 0.83630350741124815, 0.72151221350928352, 0.5316328991418382, 0.54126999796758102 },
    /* q6 */ { 0.8262807110058642, 0.89518440318208214, 0.52659516738821188, 0.68700499667047588 },
    /* q7 */ { 0.42743483871121601, 0.78674908529449683, 0.57719414329347862, 0.43866577503588522 },
    /* q8 */ { 0.35630725840527167, 0.74946311045762048, 0.48068598653885564, 0.42202004230066442 },
    /* q9 */ { 0.49028997457585338, 0.71189243442850136, 0.5857138038582661, 0.45848728198381672 },
    /* q10 */ { 0.66830536914754035, 0.64399402093727209, 0.61621407476384449, 0.45962082408106336 },
    /* q11 */ { 0.78163740029283069, 0.73440444901547797, 0.67873462620228242, 0.499536591238253 },
    /* q12 */ { 0.91770152056839982, 0.8299318587847142, 0.79404892850298248, 0.71961447745532503 },
    /* q13 */ { 0.06635408917705321, 0.68299353974147436, 0.46784649377867038, 0.32079267982495441 },
    /* q14 */ { 0.35910197995854731, 0.37737236879266023, 0.42541928146752173, 0.0066549704728502412 },
    /* q15 */ { 0.9510938939328375, 0.83561564502327412, 0.71973988870661632, 0.96497240159320896 },
    /* q16 */ { 0.98000980196375642, 0.49984841504709321, 0.22847831978168642, 0.81193133899212089 },
    /* q17 */ { 0.56043809312854576, 0.25457121525994464, 0.53721827444842374, 0.54412073370190916 },
    /* q18 */ { 0.82888658015225336, 0.69996261880067001, 0.84186342189526209, 0.78411835346934489 },
    /* q19 */ { 0.6577665209970176, 0.36043692053899418, 0.52288356488704202, 0.16655768039201896 },
    /* q20 */ { 0.4996526554953708, 0.88784852811885739, 0.20224145046435232, 0.83543130711393365 },
    /* q21 */ { 0.15761756755802603, 0.47799415644857746, 0.47220063326983414, 0.36717875724795385 },
    /* q22 */ { 0.79919477251761417, 0.8975386728797341, 0.21577760740045726, 0.67287835375577298 },
    /* q23 */ { 0.88004391204782806, 0.67524148000584927, 0.45076901777462197, 0.81982936895178771 },
    /* q24 */ { 0.40437361181138132, 0.30566967245883969, 0.46627294684518716, 0.52953174781110857 },
    /* q25 */ { 0.37360937544884831, 0.79810699508050187, 0.49274442756234016, 0.23700904850367546 },
    /* q26 */ { 0.57867467456446531, 0.92871481640025866, 0.50775634785361179, 0.79300827630737702 },
    /* q27 */ { 0.00082161623737393719, 0.15286804344466223, 0.022444496556283194, 0.509295904954987 },
    /* q28 */ { 0.71490527050842156, 0.20721769245498145, 0.44921287497187123, 1.0121503900670057 },
    /* q29 */ { -0.017396369665186942, 1.0557614859761644, -0.047364006953961237, 0.060981107632478881 },
    /* q30 */ { -0.046537382214444062, 0.44824579743722104, 0.47441436733617137, -0.057900747192982299 },
    /* q31 */ { 0.087657310719190612, 0.39507321955660613, -0.096141326445680436, 0.19993716132898082 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.26505720501744645, -0.38375260503545661, -0.35472252667931947, 0.29408728337355594, -0.06937173583509644, 0.21553524910571728, -0.2086962805331464, -0.50882125515611121, -0.50199559586136522, -0.38118956047271269, -0.16195586163099154, 0.12295112330982168, 1.0652706021565348, -1.5971344937365397, -1.7912038254432698, -2.4443898095752372, 0.069528009958223252, 0.50144821934325101, -1.4188912142982499, -1.1460849124856021, -0.70003311287055126, 0.081770434470340492, 0.035872191556935357, -0.69062164086140854, 1.1048872190078147, -0.4931446109841649, -0.4497069900227138, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D4_N35_Q40_S3002) {
  // 4 次元, 入力点 35 個, クエリ 40 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.14840193685577752, 0.16040503125644767, 0.42733043607016652, 0.31703962186424384, 0.17262699759249489, 0.52264504455329353, 0.49829379698667486, 0.48792512888037876, 0.25428850260333491, 0.80839470910407429, 0.08826292383892298, 0.41395250788666305, 0.28502255286096445, 0.048223560982336711, 0.29023613964662398, 0.80997539898320259, 0.13367507934954204, 0.15395719039465461, 0.083129456893567988, 0.33101784986917882, 0.97322550087518189, 0.54293173698944952, 0.90694563708060361, 0.0045867411520869039, 0.76791443501325929, 0.91145719884646381, 0.30718072075050606, 0.071242490763512079, 0.71422740907653837, 0.24065862323468634, 0.2094639930796196, 0.84989831275341066, 0.63252081960588291, 0.1372799550214594, 0.96948873421181592 },
    /* dim 1 */ { 0.53129315284575995, 0.89772799926342661, 0.92139077035560335, 0.97669946240367267, 0.68774462871030473, 0.11045203813286719, 0.46435549556468536, 0.83067215793968097, 0.57357433423392479, 0.11803707735960167, 0.69953170692244948, 0.90898972966176261, 0.64017414732404765, 0.032143556816787933, 0.027508250124134825, 0.97547650334323632, 0.67503304593634927, 0.359840521154562, 0.17920640063421855, 0.29653568792569018, 0.40665570483070257, 0.57208755957284108, 0.42834331637752432, 0.95185697191554619, 0.38595817616124584, 0.26872954732536491, 0.78693717848080824, 0.64995730865801205, 0.54057225831838129, 0.60951547509007453, 0.73843236638839493, 0.53950915575709235, 0.55524109967712054, 0.97188952202293666, 0.74671043167773299 },
    /* dim 2 */ { 0.61835524111301754, 0.72015655837019277, 0.30248251946443705, 0.15435773297693201, 0.17684538716219211, 0.09275678475112803, 0.98843705847421859, 0.3217355994400739, 0.088211795206408983, 0.15929099154707727, 0.80541048427302275, 0.78653216769322221, 0.30811555670106616, 0.28226208441924772, 0.72904122705424246, 0.505593545593927, 0.25565815254664126, 0.10295379356910206, 0.080809700300362164, 0.70216610237841692, 0.24301393491585277, 0.14560978964500337, 0.94548551510577583, 0.46248287129638699, 0.047549724102245006, 0.61596121970425854, 0.30300919605278054, 0.52410157288872561, 0.83650339438379329, 0.8352969712276016, 0.40443674293456366, 0.47123088040186112, 0.82870562482699428, 0.61397538764917359, 0.23093358931945462 },
    /* dim 3 */ { 0.41684191458988951, 0.73314021517057082, 0.11713233819071789, 0.2457398604607226, 0.43045049405850799, 0.22709048087640016, 0.24468652722851214, 0.76337411022489388, 0.59743352281244566, 0.95183857973887731, 0.13825896155484485, 0.2334865610131861, 0.78193223547660928, 0.97038404699040293, 0.77904206145631727, 0.97799907983722001, 0.036450640047584248, 0.57038505187994581, 0.37689055914035319, 0.8790313936268519, 0.33951401774010281, 0.51923102674996058, 0.0093412797003322723, 0.59683972688420905, 0.57450845016762353, 0.58396222016594201, 0.27347146559140578, 0.025964313572710229, 0.75419875782991252, 0.70672766503732476, 0.77990504836021735, 0.59927249209430944, 0.074672472525092015, 0.09023789302012386, 0.25374891425327839 }
  };
  std::vector<double> values = { -0.2487252934262725, 0.93295945005644043, 0.87082775551353175, 0.91345111534896928, -0.04624259784881405, 1.06835642546889, 0.42104637598359368, 0.90140227491350722, 1.3270067875749987, -0.10238537014535423, 0.4769030402243094, -0.18189712186004908, 1.0173440603049397, -1.0188538719204681, -0.12227163846369947, 0.1184880829282217, 0.35494432571158763, 0.28997828201110898, -1.6334919212912744, 1.001323966040498, 0.028413520293864368, -1.7951777521018251, -0.77433133800405118, -0.39908578923942406, -0.95370461787218308, 0.022301273264628517, -0.29005664964349176, -0.40359082152936787, -1.5544385549775577, -0.86984536134808899, 0.62489307049012166, 1.6409313424920564, 0.51426407078561698, -0.983908636975517, 1.5490515554298916 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.85010709842111432, 0.64612233309479339, 0.59794938496096239, 0.51891210474301053 },
    /* q1 */ { 0.83850079134804378, 0.55052615622431988, 0.67495491103792316, 0.58495476592554319 },
    /* q2 */ { 0.92220307675349511, 0.47798963119368343, 0.50132502788944056, 0.35716778479079292 },
    /* q3 */ { 0.90280902913401495, 0.58741626858682583, 0.41334663398707078, 0.55089934481817049 },
    /* q4 */ { 0.88955305637509929, 0.59175379089619029, 0.5538409500250554, 0.48486479721021636 },
    /* q5 */ { 0.2196382784940954, 0.14183015337251409, 0.25756471801881647, 0.58475844006868383 },
    /* q6 */ { 0.8009651472653555, 0.44948051813918954, 0.4681790897838411, 0.18087343301904113 },
    /* q7 */ { 0.63305506296022762, 0.50315598636031889, 0.47070793330999877, 0.12026075748053741 },
    /* q8 */ { 0.86641580090537895, 0.53529194166403449, 0.54387390891398768, 0.25530983526262296 },
    /* q9 */ { 0.7893588401922853, 0.35388434126871593, 0.54518461586080191, 0.24691609420157387 },
    /* q10 */ { 0.85480949383230853, 0.43969576479356098, 0.62087943499094844, 0.32135249644515568 },
    /* q11 */ { 0.7779493753268466, 0.37611750914462949, 0.4503336889200189, 0.36490233668036925 },
    /* q12 */ { 0.80300987547257985, 0.46647907549109674, 0.73957732688453659, 0.40428944446311765 },
    /* q13 */ { 0.3646913289361966, 0.12959628871759071, 0.27326097626815954, 0.69974804418838876 },
    /* q14 */ { 0.32636588999937366, 0.16681301867615533, 0.39514283979361731, 0.83013622673847909 },
    /* q15 */ { 0.61106666130857579, 0.2502765642106346, 0.60859258701355778, 0.78961460256358018 },
    /* q16 */ { 0.14840193685577752, 0.53129315284575995, 0.61835524111301754, 0.41684191458988951 },
    /* q17 */ { 0.16040503125644767, 0.89772799926342661, 0.72015655837019277, 0.73314021517057082 },
    /* q18 */ { 0.42733043607016652, 0.92139077035560335, 0.30248251946443705, 0.11713233819071789 },
    /* q19 */ { 0.31703962186424384, 0.97669946240367267, 0.15435773297693201, 0.2457398604607226 },
    /* q20 */ { 0.17262699759249489, 0.68774462871030473, 0.17684538716219211, 0.43045049405850799 },
    /* q21 */ { 0.52264504455329353, 0.11045203813286719, 0.09275678475112803, 0.22709048087640016 },
    /* q22 */ { 0.86071629891483314, 0.62210302533430062, 0.56077738264909271, 0.78098065000158101 },
    /* q23 */ { 0.17893296496769856, 0.6348627596170775, 0.5113959920237906, 0.59837348147505343 },
    /* q24 */ { 0.10426122289248574, 0.8109234153404743, 0.56903848026894965, 0.058101103296417045 },
    /* q25 */ { 0.14103850810265978, 0.60316309939105461, 0.4370066968298294, 0.22664627731873688 },
    /* q26 */ { 0.51542843293491414, 0.70137985875626097, 0.23367269454253864, 0.64130256848742717 },
    /* q27 */ { 0.4024823753723113, 0.90368581017167682, 0.23804666620850295, 0.50455698534280824 },
    /* q28 */ { 0.3839040164150862, 0.84318532514803923, 0.70138254534835165, 0.78104900469693206 },
    /* q29 */ { 0.124753743582962, 0.95396663650238467, 0.53136386657792978, 0.50886351898105997 },
    /* q30 */ { 0.24399153561831219, 0.90295642059355685, 0.44245132018030997, 0.63266015506788675 },
    /* q31 */ { 0.089831968443825627, 0.44441012919887646, 0.36430784321549387, 0.22321117322578637 },
    /* q32 */ { 0.34973196396800488, 0.70874743540535545, 0.34836298882678729, 0.73740814327971471 },
    /* q33 */ { 0.14336836157754324, 0.69811233454128252, 0.29809803618638164, 0.041962708676655483 },
    /* q34 */ { 0.59529298396165931, 0.51928704041269658, 0.88931880224474347, 0.039664513131375811 },
    /* q35 */ { 0.57384342617249517, -0.048507212627708032, 0.21753209485778122, 0.21407580655316372 },
    /* q36 */ { 0.57753649284035891, 0.43557588793993174, 0.15845084802565282, -0.029177396033386108 },
    /* q37 */ { 0.024465031176085061, 0.72815799957956129, 0.83804978210745962, 0.074347255173676075 },
    /* q38 */ { 0.77543924593940461, 0.15608442245444717, 0.61913264794942457, 0.53609551560513058 },
    /* q39 */ { 1.0970724192755963, 0.17374846967501148, 0.63987921189467245, 0.93770359334981657 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.19594021757371477, -0.10940983885933962, 0.49327327069527782, 0.67183715488173257, 0.51128818322215031, -0.28325654483908858, 0.47715084679484249, 0.54245700787838691, 0.59166583019947516, 0.17180079036178925, 0.2863157737664232, 0.65485332646101102, -0.030254641287861234, 0.022964765390095333, 0.0095582735044170489, -0.15109406485629626, -0.24872529342627248, 0.93295945005644043, 0.87082775551353164, 0.91345111534896895, -0.046242597848813939, 1.06835642546889, 0.070394678096425453, 0.18808388853192462, -0.69374972925244238, 0.053109516142657603, -0.44688773859415959, 0.90742669513123819, 0.31396142830048651, -0.37999546954088587, 0.12018272656832044, -0.86527160869452802, 0.82896916937009846, 0.25504572649148866, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D4_N50_Q48_S3003) {
  // 4 次元, 入力点 50 個, クエリ 48 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.062268600089330439, 0.15505393135814904, 0.40435581794999287, 0.79381429442882545, 0.23882289235351861, 0.54849134785813225, 0.26398209284455898, 0.68036201192054502, 0.42903497555130565, 0.66572017674134831, 0.45992920519248226, 0.78133668914919052, 0.053445516643069069, 0.33388888666100369, 0.37364600719761532, 0.236568452565878, 0.40641921059659625, 0.78471177018676797, 0.10836709214086571, 0.81890152160706786, 0.27897396665076502, 0.11460051412194461, 0.77064098872299835, 0.85403279895507245, 0.69618043074303038, 0.84372557259698988, 0.069523858558773965, 0.15395448013326551, 0.3039282635557421, 0.82305742052418052, 0.88911303836294364, 0.90927060977174967, 0.37623754454323599, 0.13157884546009613, 0.81669344908984964, 0.64922654002467373, 0.40449323467987619, 0.77861746720285741, 0.67513154836353573, 0.27199238504184231, 0.77147178766474245, 0.61976517469948267, 0.79069329055256066, 0.5005623857513436, 0.11174249960304083, 0.20329070877164368, 0.91672614475319758, 0.89645924684880152, 0.52604088853919551, 0.092633633724106046 },
    /* dim 1 */ { 0.88647704177661946, 0.71865844554228442, 0.99289816412330867, 0.73536012319977007, 0.99474689714632969, 0.84443515747772668, 0.79721419552802975, 0.76855351590369125, 0.10167236846021155, 0.12273401617542667, 0.93955232919836829, 0.90796296129381615, 0.35396572251618708, 0.74524655205692525, 0.29967918855610587, 0.4894020430738919, 0.38139160820842877, 0.14862515602696658, 0.80191561036856296, 0.67984843367410219, 0.8610525871951209, 0.88244231297145426, 0.86108689779618086, 0.52680816432786159, 0.55989165709458855, 0.19480359408011172, 0.20676308019922829, 0.16254984644265469, 0.76964467796209857, 0.8747070274311336, 0.52644935153987504, 0.24703967074783817, 0.95545469950951578, 0.36112509399333159, 0.97470396117875879, 0.50287809203063727, 0.16243654740838431, 0.16749978197184179, 0.37503912388692973, 0.26471046924345909, 0.69545095420918246, 0.39926043062247962, 0.47826764089282581, 0.98172524411203854, 0.99423747724005329, 0.7633761464259341, 0.9851771648406209, 0.30261737372247877, 0.91858475163400133, 0.01060128325995624 },
    /* dim 2 */ { 0.57537917528550886, 0.58737995204379045, 0.12040931386330311, 0.25814473786887837, 0.45006188484583765, 0.25369509528960699, 0.70392873496074404, 0.51241778926279036, 0.18692897772641082, 0.97936932054546155, 0.43299624751763299, 0.60105565147186568, 0.69487193821629456, 0.8923067962693354, 0.85838135888621137, 0.21183966018353617, 0.61174101962671157, 0.70446099398940099, 0.35466808544839767, 0.19965112300487509, 0.37983437090779359, 0.66913584644975177, 0.32271266951763922, 0.34248027061979291, 0.32183920158077783, 0.4447585989817826, 0.24613187804554137, 0.59319982709086949, 0.13843413104062019, 0.73742954255198701, 0.037029075843393544, 0.78927824227202503, 0.19945626206274736, 0.50790744937340493, 0.33093501201587494, 0.030251520979556523, 0.89828711020595819, 0.49448325560690642, 0.13690139011220381, 0.77807186493667646, 0.6666103188858048, 0.45977533422333239, 0.82316321031472794, 0.47472619963149465, 0.18492446585975497, 0.63761433601331996, 0.81637337692542167, 0.79689964286741111, 0.66982945364199065, 0.67293168218815091 },
    /* dim 3 */ { 0.6899181882266997, 0.54999103330591437, 0.62208576472759858, 0.0098257567408737145, 0.050240419223726684, 0.76805420339128538, 0.96440831360096213, 0.57997343566142123, 0.99704131590193623, 0.28788599295317852, 0.77187023570961022, 0.32787483340980994, 0.022260822538504255, 0.59257699804570652, 0.97555813236768163, 0.27833086513865246, 0.070758228650035671, 0.43350479302460776, 0.55840190802621947, 0.71954772234380182, 0.46672659827326068, 0.54679318413598144, 0.87070210421542749, 0.20012264086056564, 0.84149773228678437, 0.20593582640122621, 0.37839088631944029, 0.97860353610605222, 0.2060402786645128, 0.78136068322818197, 0.55585180788531885, 0.20183127522515054, 0.86424598415252918, 0.76887445971186408, 0.34466422786513429, 0.49529927126158935, 0.15229806177190686, 0.084434772953148274, 0.87813231590225704, 0.76167595029993329, 0.56283138388818321, 0.37014481877456995, 0.021608205893126398, 0.52662891508411913, 0.26964147793807491, 0.65982265326303258, 0.8165799780399321, 0.84698335164630822, 0.42362284261868688, 0.063675341609341407 }
  };
  std::vector<double> values = { 1.7320673243017102, -1.1975597786493295, 0.83068249912581227, 0.74331129109471039, -1.0568038505225614, -1.6045073121433815, -1.0461888885808841, 0.49619391241998428, -0.89897969151052248, 0.45147118365100902, -1.2725227582341476, -0.39536642347400303, 2.3411110255201981, 0.31589099780275315, 0.314242283134891, -1.1822662972629283, 0.35482180348627373, 0.75687703784753524, 1.193836718119341, -0.21617785302020875, 0.68950094940114226, 0.20028434141750368, 0.52226403406859123, 0.43366128222180367, -1.1622911918292791, 1.2816989399853709, -0.47072464029587252, 1.6261942627514987, 0.49409109357463099, 0.50919247737854312, -0.23166834106840881, -1.2640300239275837, -0.33041597782608545, -0.11009713168289648, 1.1071436632063518, -0.9958952704963957, 1.2828692373591466, 0.80251704094742293, 0.16332801553780549, 0.174831788331826, 1.5095206927555838, 0.038098228717140518, 0.75234158482454294, 1.2228598353918008, 0.92813789162877469, 1.6988199628187888, 0.23487290290558496, -2.7858008416377835, -0.37347425403409723, -1.3722778932687649 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.36659610741386695, 0.94611373216941241, 0.5971352966276029, 0.52603213694209183 },
    /* q1 */ { 0.52225522428624527, 0.28107551307853368, 0.27356926199132481, 0.48936242373175237 },
    /* q2 */ { 0.48376191968915966, 0.35862144800126972, 0.27855139848274985, 0.34562033357909561 },
    /* q3 */ { 0.79089938252325798, 0.42539818856444722, 0.25293343785610356, 0.27026948704843129 },
    /* q4 */ { 0.50555012255620169, 0.42038062409507387, 0.24817021053688376, 0.24925631048274083 },
    /* q5 */ { 0.51553237818983466, 0.31226931827114218, 0.28549298275946466, 0.2884783244148113 },
    /* q6 */ { 0.71794351874775408, 0.2986606376165355, 0.23869028582761001, 0.46771259888064376 },
    /* q7 */ { 0.55402568278692021, 0.23472338334840614, 0.28051084626803957, 0.43222041456746807 },
    /* q8 */ { 0.39423154129608823, 0.32192526234093766, 0.37670624277860265, 0.16293152455229123 },
    /* q9 */ { 0.50964010512479629, 0.29154578598951064, 0.37139774540821974, 0.26344743391740744 },
    /* q10 */ { 0.44270710152680659, 0.13626802159426993, 0.40904687850975846, 0.3458956286370185 },
    /* q11 */ { 0.80598244887370107, 0.49725986503565112, 0.2225328408586808, 0.29340706062991473 },
    /* q12 */ { 0.77117262492783245, 0.43003992652019302, 0.26285896012957161, 0.36547087303665399 },
    /* q13 */ { 0.87852025330711148, 0.359543630883633, 0.48208916611688102, 0.40214498040371388 },
    /* q14 */ { 0.6406637077684193, 0.42263046482699645, 0.29782107699760008, 0.30996668448732068 },
    /* q15 */ { 0.83589214859109906, 0.37430226686548468, 0.46582902106987711, 0.14043005443619289 },
    /* q16 */ { 0.062268600089330439, 0.88647704177661946, 0.57537917528550886, 0.6899181882266997 },
    /* q17 */ { 0.15505393135814904, 0.71865844554228442, 0.58737995204379045, 0.54999103330591437 },
    /* q18 */ { 0.40435581794999287, 0.99289816412330867, 0.12040931386330311, 0.62208576472759858 },
    /* q19 */ { 0.79381429442882545, 0.73536012319977007, 0.25814473786887837, 0.0098257567408737145 },
    /* q20 */ { 0.23882289235351861, 0.99474689714632969, 0.45006188484583765, 0.050240419223726684 },
    /* q21 */ { 0.54849134785813225, 0.84443515747772668, 0.25369509528960699, 0.76805420339128538 },
    /* q22 */ { 0.26398209284455898, 0.79721419552802975, 0.70392873496074404, 0.96440831360096213 },
    /* q23 */ { 0.68036201192054502, 0.76855351590369125, 0.51241778926279036, 0.57997343566142123 },
    /* q24 */ { 0.5130921926480394, 0.3903260194154542, 0.53575817692502192, 0.22045152371230281 },
    /* q25 */ { 0.53491321897032285, 0.42978542282534721, 0.59011028023349454, 0.90852793232723306 },
    /* q26 */ { 0.35517373707616917, 0.57551814308526361, 0.37508757533366588, 0.13839925365727423 },
    /* q27 */ { 0.11005479587195327, 0.89807654380430813, 0.26979627565407632, 0.41402169298214719 },
    /* q28 */ { 0.70678973456415406, 0.5673102769111249, 0.35896003604610538, 0.18998528775772183 },
    /* q29 */ { 0.44182636034609435, 0.76596483116481262, 0.57501606263805516, 0.61989804446222685 },
    /* q30 */ { 0.25777120960832151, 0.6752273151345064, 0.29583701554566488, 0.37252873170595657 },
    /* q31 */ { 0.44289749629527586, 0.49614006755226459, 0.12104559058154635, 0.3868150682001209 },
    /* q32 */ { 0.81844769128149963, 0.19573812175692779, 0.43584085358719926, 0.21379693045878331 },
    /* q33 */ { 0.72703093142673825, 0.41586025790659259, 0.38683819372925959, 0.06393001572077385 },
    /* q34 */ { 0.37927042340729911, 0.35045060651538995, 0.14056314273617768, 0.47670362986310488 },
    /* q35 */ { 0.65082035745939015, 0.7551090398305933, 0.67571245268350644, 0.54346243392992821 },
    /* q36 */ { 0.4241933314445977, 0.37406371550764278, 0.19941863750846453, 0.90643626372042463 },
    /* q37 */ { 0.14294014973378535, 0.62547312180325954, 0.67845100583669082, 0.60823775897364685 },
    /* q38 */ { 0.81134004662733394, 0.80947939615613751, 0.26369211159546552, 0.60549528220864279 },
    /* q39 */ { 0.12248580230608551, 0.86785813340870521, 0.21723067705617685, 0.32082863854532029 },
    /* q40 */ { 0.62511871121473406, 0.37276015888831115, 0.4055726804833189, -0.071257318099389316 },
    /* q41 */ { 0.88786015372621385, 0.81881821218891437, 0.11260265977567144, 0.0058670456869338028 },
    /* q42 */ { 0.49128431877054712, 0.82508047431009357, 0.65355023562909031, 0.016052502439053012 },
    /* q43 */ { 0.06172677485069078, -0.1346126290211147, 0.89879994741985936, 0.12515173228881987 },
    /* q44 */ { 0.93371970594249443, 1.0845934882358617, -0.017768531531443268, 0.1823278203599597 },
    /* q45 */ { 0.38594822920748784, 0.86875955593705156, 0.80687271678741257, 0.78267694695037893 },
    /* q46 */ { 0.88644263054037442, 0.77253184063362534, 0.21088722738453231, 0.67547381250841287 },
    /* q47 */ { 0.48861672314019178, 0.74172779088149976, 0.082617183892110535, 0.87592040989129083 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.4666561106988073, -0.20916048672005566, -0.26581780787053677, 0.3199927320925402, -0.2206115752026139, -0.11293404542448056, -0.0084654644284905822, -0.056276724274008844, -0.29588809975708563, 0.093864654418227084, -0.13155324882847028, 0.24622158034741615, 0.10517896787190212, -0.51322779688532094, -0.084940623367001977, 0.39943170606434625, 1.7320673243017102, -1.1975597786493291, 0.83068249912581227, 0.74331129109471039, -1.0568038505225619, -1.6045073121433815, -1.0461888885808848, 0.49619391241998428, 0.19646001610170674, -0.4240244543471946, 0.42445644853045245, 1.0609873048740577, 0.39070475990592562, 1.0975069376193856, -0.24638267393089341, -1.0890807838796619, 1.0682709352873978, 0.57892962132711157, -0.66348092725273222, 0.8389717377245578, -0.39874507928379099, 0.57928851525138336, 0.35640659495552485, 0.66563900956609912, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}



TEST(ScipyCompat, Fixed_D5_N18_Q24_S4001) {
  // 5 次元, 入力点 18 個, クエリ 24 個
  std::vector<std::vector<double>> points = {
    /* dim 0 */ { 0.066446752975804602, 0.5869250367357367, 0.94740898234752791, 0.72237199128539886, 0.66271733436917468, 0.83034813558320686, 0.12013445282985447, 0.31913953569229048, 0.37298481875654488, 0.46105279788098374, 0.17471125028471279, 0.33761080806005594, 0.403034301808324, 0.47508353119594904, 0.26417385678940575, 0.24512731718041747, 0.99395069661182311, 0.31195661379000517 },
    /* dim 1 */ { 0.56024347306558253, 0.14922982996499012, 0.1486749325398421, 0.34101058600765621, 0.43019107068113771, 0.8876219426236821, 0.70305773438247865, 0.85609700633618879, 0.66652952544542943, 0.7796076906000996, 0.93146143117726155, 0.32082025190353336, 0.27116692531726061, 0.32515707780353931, 0.080314562670925849, 0.25273113439376382, 0.8891094451591337, 0.0192005905584125 },
    /* dim 2 */ { 0.32527434168735192, 0.099618401403745671, 0.61265286296767973, 0.067961703498293891, 0.57219055041217093, 0.22329775684902198, 0.14172871819936061, 0.71247086204453935, 0.99645895598619549, 0.61080227196603554, 0.85125572775791392, 0.77341721992139911, 0.43207261935993879, 0.64428589909690959, 0.4956522113392684, 0.033534781114446854, 0.58302060188646043, 0.75729134397316733 },
    /* dim 3 */ { 0.055949522400725926, 0.76893624462785026, 0.12999315912822662, 0.69570067084067755, 0.87018095020799524, 0.41937202747019919, 0.3345939881155191, 0.42169124502235422, 0.24243955899941194, 0.90086082983084725, 0.96686353962874427, 0.057311341703607743, 0.97104472585966839, 0.47338693640781437, 0.2322199051587468, 0.72992680144070887, 0.073071714229362317, 0.10859774191237181 },
    /* dim 4 */ { 0.0022098648472855809, 0.45765141305697465, 0.84049906611532121, 0.874268558963333, 0.33452243917226476, 0.62488967605205092, 0.82953138711679353, 0.38969214827861698, 0.29635053124960564, 0.28556773178926387, 0.29150125392215165, 0.92215030333818526, 0.13683016334102338, 0.25035830107085577, 0.58672838924102289, 0.11723283503210713, 0.28776374069630628, 0.81153168603983106 }
  };
  std::vector<double> values = { -2.04656204072971, 0.31609026817581481, 0.17229646763547177, 0.621698233411207, 0.69205124842478105, -0.012740552144730495, 0.63411034411016909, 0.5946641079121805, -0.041751061207139444, -0.41309110997008125, 1.8535283046843862, -0.027173368903633942, -0.37681187373977304, -0.1398898943690402, 0.64651332424391939, 0.91481528604936557, -1.5888914330059369, -0.19128591414437665 };

  std::vector<std::vector<double>> queries = {
    /* q0 */ { 0.25318963211378659, 0.37632206308335053, 0.45192256695734928, 0.5572077836859598, 0.46222595244882164 },
    /* q1 */ { 0.19828886095874762, 0.56398422367103351, 0.42665277369048021, 0.4568741669611332, 0.36948264640632961 },
    /* q2 */ { 0.25438678576416751, 0.51580479904631316, 0.44445248663591136, 0.60939003420429028, 0.39191936282195261 },
    /* q3 */ { 0.26555126573413285, 0.42148608470581211, 0.64300086668397272, 0.4295191656599448, 0.35419198144015335 },
    /* q4 */ { 0.43236557174706425, 0.66274069403966529, 0.41357408200100049, 0.25614973373281796, 0.45346920103867938 },
    /* q5 */ { 0.33365739543749023, 0.38230501882880485, 0.69616945958556553, 0.49909206799445965, 0.39555005414408173 },
    /* q6 */ { 0.31967493441815137, 0.4797933656652929, 0.74290250003299907, 0.40753315452157396, 0.43769371830034731 },
    /* q7 */ { 0.29273908530179021, 0.47247883257999984, 0.62416662587126304, 0.49031736474251858, 0.26066308394532411 },
    /* q8 */ { 0.066446752975804602, 0.56024347306558253, 0.32527434168735192, 0.055949522400725926, 0.0022098648472855809 },
    /* q9 */ { 0.5869250367357367, 0.14922982996499012, 0.099618401403745671, 0.76893624462785026, 0.45765141305697465 },
    /* q10 */ { 0.94740898234752791, 0.1486749325398421, 0.61265286296767973, 0.12999315912822662, 0.84049906611532121 },
    /* q11 */ { 0.72237199128539886, 0.34101058600765621, 0.067961703498293891, 0.69570067084067755, 0.874268558963333 },
    /* q12 */ { 0.1205790016302587, 0.74585245212142204, 0.58826503472263292, 0.5114065310147351, 0.14685555938471861 },
    /* q13 */ { 0.24333393203735898, 0.47533101086783702, 0.80427353586554062, 0.53773064077055799, 0.55151646998099135 },
    /* q14 */ { 0.27076514208587682, 0.44270027543456092, 0.48478012039213075, 0.26466822940427015, 0.12628408295907068 },
    /* q15 */ { 0.61953900689612029, 0.57092028977644871, 0.30827769150045364, 0.40149925783503559, 0.20249828786420671 },
    /* q16 */ { 0.6985027210551169, 0.44791011276041981, 0.60862422442316921, 0.46807275518904645, 0.63362507512216293 },
    /* q17 */ { 0.2652503925223732, 0.5055674580627425, 0.4501911980629269, 0.28849070908500429, 0.79049740108441935 },
    /* q18 */ { 0.66890321989792378, 0.54583496751229477, 0.28206348790700614, 0.59858263154378943, 0.4056745945517613 },
    /* q19 */ { 0.36739932452045532, 0.61166096912497303, 0.6001469840305621, 0.49589005067059078, 0.32838079577247725 },
    /* q20 */ { 0.28769909310676345, 0.45822576172060581, 0.11312526844857845, 0.45706698857906353, 0.11470608156647588 },
    /* q21 */ { 0.75854722185160428, 0.42727589519448816, 0.21003579784868112, 0.19141315828829908, 0.26381583620828813 },
    /* q22 */ { 0.4280926227403366, 0.26781932849132883, 0.42228311488507331, 0.13386359961177371, 0.3857496870631395 },
    /* q23 */ { 0.096722915556747002, 0.2812143694943543, 1.0083217164040492, 0.61098731552636387, 0.4093321695624168 }
  };

  SimpleLinearNDInterpolator interp(points, values);
  auto results = interp.interpolate(queries);

  ASSERT_EQ(results.size(), queries.size());

  const std::vector<double> expected = { 0.58014491186728112, 0.43284488771171825, 0.71113658221004106, -0.026061543482118588, -0.2954843749356843, 0.29171714757799683, 0.45362981118665491, -0.017495540186227176, -2.04656204072971, 0.31609026817581504, 0.17229646763546963, 0.621698233411207, -0.096516868022661351, 0.83112119527000494, -1.0932259675493747, -0.33703807347828574, 0.40809082578148742, 0.35160402550005926, -0.18450708917558645, 0.30663600491464826, std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN(), std::numeric_limits<double>::quiet_NaN() };
  const double tol = 1e-9;
  for (size_t i = 0; i < queries.size(); ++i) {
    ASSERT_EQ(results[i].size(), static_cast<size_t>(1));
    const double got = results[i][0];
    const double expv = expected[i];
    if (std::isnan(expv)) {
      ASSERT_TRUE(std::isnan(got));
    } else {
      ASSERT_NEAR(got, expv, tol);
    }
  }
}

